<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>c0ldcat's blog</title>
		<link>//blog.c0ldcat.ml</link>
		<atom:link href="//blog.c0ldcat.ml/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>2012年全国普通高等学校招生统一考试上海语文试卷</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;转载自&lt;a href=&quot;http://blog.sina.com.cn/s/blog_49e65d570101725p.html&quot;&gt;2012年全国普通高等学校招生统一考试(上海 语文试卷详解解答)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p align=&quot;center&quot;&gt;&lt;b&gt;2012&lt;/b&gt;&lt;b&gt;年全国普通高等学校招生统一考试&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;上海 语文试卷详解解答&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;考生注意：&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
1．本考试设试卷和答题纸两部分，试卷包括试题与答题要求，所有答题必须涂（选择题）或写（非选择题）在答题纸上，做在试卷上一律不得分。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;2．答题前，务必在答题纸上填写准考证号和姓名，并将核对后的条形码贴在指定位置上。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;3．答题纸与试卷在试题编号上是一一对应的，答题时应特别注意，不能错位。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;4．考试时间150分钟，试卷满分150分。&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;一．阅读80分&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（一）阅读下文，完成第1-6题。（16分）&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;应该正确对待文献综述&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
熊易寒&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
①在很长一段时间里，国内学术界都不大重视文献综述。近年来随着学术规范的逐步建立，这种情况有所转变，不过大多数综述都是罗列式的，报幕似地把相关研究一个一个列出来，丝毫感觉不到这些文献之间存在任何内在的关联，甚至也感觉不到这些文献与作者本人的研究有何相干。这样的综述机械、突兀，有生拼硬凑之嫌，称之为“伪综述”亦不为过。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　②阅读国际上的顶级学术刊物，有这么几个发现：一、书评以外的论文□有比较翔实的文献综述；二、专门的文献综述性文章□是由该领域的一流学者撰写；三、对相关著作的征引□采取间接引用的形式，很少直接引用。这与国内的情形很不一样，值得我们思考。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　③为什么必须有文献综述？一篇优秀的文献综述其实就是一幅学术谱系图。写文献综述不仅是为了陈述以往的相关研究，也不仅仅是为了表示对前辈、同行或知识产权的尊重，更是为了“认祖归宗”，对自己的研究进行定位。有时候只有把一篇文献放到学术史的脉络中去，放到学术传统中去，我们才能真正理解这个文本：作者为什么要做这项研究？他的问题意识是什么？他试图与谁对话？我们在开始一项研究时也同样要有问题意识和对话意识，不能自说自话。对话的前提自然是倾听，如果连别人说了什么都不知道，如何进行对话？正是在倾听的过程中，我们发现了“问题”，才需要与对方进行讨论，否则便无话可说。通过综述的写作，我们就会知道：别人贡献了什么？我打算或者能够贡献什么？我是否在重复劳动？从这个意义上讲，撰写文献综述首先是为了尊重并真正进入一个学术传统，其次才是利他主义功能——为他人提供文献检索的路线图。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　④为什么综述性文章要由大家执笔？这类文献综述看似简单，其实是一项高难度的工作：首先，必须熟悉该领域的重要文献，了解最新的研究进展，在“知识大爆炸”的今天，要做到一点，非有积年之功不可。其次，面对汗牛充栋的文献，必须具备高超的理解能力和概括能力，从宏观上把握总的研究状况，否则就不是你在驾驭文献，而是文献驾驭你。我们（特别是初学者）在阅读文献的时候，常常淹没在浩如烟海的文献之中，茫然不知所措，有时甚至感觉被人牵着鼻子走，面对不同观点的学术论争，觉得“公说公有理，婆说婆有理”，不免犯糊涂，此乃“段位”不够所致。最后，这类综述性文章往往具有一定的导向性和前瞻性，除了要总结现有研究，还需要高屋建瓴，指出现状的不足及其根源所在，为这一领域甚至整个学科的发展方向提出建议性意见。如此看来，专门的文献综述性文章由德高望重、造诣深厚的学术权威撰写也就理所当然了。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⑤为什么要尽可能间接引用？间接引用就是作者用自己的语言表述引文的核心观点，这样做至少有两个好处：一来重新表述需要我们先将对方的观点吃透，然后围绕自己的核心问题和行文思路，重新加以组织，这样可以使论述更加紧凑有力。在这个过程中，我们要尽可能找出不同文本之间的内在关联，他们的分歧是什么，共识是什么，将众多的观点进行整合、归类。二是间接引用突破了原文的限制，可以用尽可能简洁的语言进行概括，有效节省篇幅。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⑥规范的文献综述，要求学者有严谨、认真的治学态度，也需要学术刊物的大力倡导和支持，因为有了文献综述，论文的篇幅势必扩大，有限的版面会更加紧张。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⑦认真对待文献综述，对于我们的社会科学研究而言是非常重要的。我们不能仅仅把文献综述看作论文写作的一个步骤、程序，或者是有关方面的一个规定，更应该看到，这是知识生产过程的一个有机组成部分，&lt;u&gt;它不是在重复别人，它是在说出自己&lt;/u&gt;。这不仅是一个合法性问题，也是一个有效性问题。可以说，扎实的文献综述是一篇论文成功的一半。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;1．概括第①段大意。（25字以内）（2分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
2．根据文章的意思，可依次填入第②段空格处的一项是（&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
）（2分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
A．通常&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
大多&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
都&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
B．大多&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
通常&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt; 都&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
C．都&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
通常&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
大多&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
D．通常&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
都&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
大多&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
3．第③段加点词“倾听”在文中的意思是&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
。（2分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;4．简析第⑥段的作用。（3分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
5．联系上下文，对第⑦段画线句理解正确的一项是（&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
）（3分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
A、文献综述需要对别人的观点概括提炼，不能重复别人的观点。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
B、文学综述不是简单重复原文观点，而是对原文的发现和发展。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
C、文献综述要突破原文观点的限制，表达出自己个性化的认识。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
D、文献综述需要对别人观点加以整合，体现出自己的独立思考。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;6．作者认为优秀的文献综述具有哪些价值？（4分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（二）阅读下文，完成第7-12题。（22分）&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
冬阳·童年·骆驼队伍&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
林海音&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;①骆驼队来了，停在我家的门前。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
②它们排列成一长串，沉默地站着，等候人们的安排。天气又干又冷，拉骆驼的摘下了他的毡帽，秃瓢儿上冒着热气，是一股白色的烟，融入干冷的大气中。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　③爸爸在和他讲价钱。双峰的驼背上，每匹都驮着两麻袋煤。我在想，麻袋里面是“南山高末”呢？还是“乌金墨玉”呢？我常常看见顺城街煤栈的白墙上，写着这样几个大黑字。&lt;u&gt;但是&lt;/u&gt;拉骆驼的说，他们从门头沟来，他们和骆驼，是一步一步走来的。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　④另外一个拉骆驼的，在招呼骆驼们吃草料。它们把前脚一屈，屁股一撅，就跪了下来。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⑤爸爸已经和他们讲好价钱了。人在卸煤，骆驼在吃草。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⑥我站在骆驼的面前，看它们吃草料咀嚼的样子，那样丑的脸，那样长的牙，那样安静的态度。&lt;u&gt;它们咀嚼的时候，上牙和下牙交错地磨来磨去，大鼻孔里冒着热气，白沫子沾满在胡须上&lt;/u&gt;。我看得呆了，自己的牙齿也动起来。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⑦老师教给我，要学骆驼，沉得住气的动物。&lt;u&gt;看它从不着急，慢慢地走，慢慢地嚼，总会走到的，总会吃饱的&lt;/u&gt;。也许它天生是该慢慢地，偶然躲避车子跑两步，姿势很难看。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⑧骆驼队伍过来时，你会知道，打头儿的那一匹，长脖子底下总会系着一个铃铛，走起来“当、当、当”地响。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⑨“为什么要一个铃铛？”我不懂的事就要问一问。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⑩爸爸告诉我，骆驼很怕狼，因为狼会咬它们，所以人类给它们戴上铃铛，狼听见铃铛的声音，知道那是有人类在保护着，就不敢侵犯了。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⑾我的幼稚的心灵中却充满了和大人不同的想法，我对爸爸说：&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⑿“不是的，爸！它们软软的脚掌走在软软的沙漠上，没有一点点声音，你不是说，它们走上三天三夜都不喝一口水，只是不声不响地咀嚼着从胃里反刍出来的食物吗？一定是拉骆驼的人类，耐不住那长途寂寞的旅程，所以才给骆驼戴上了铃铛，增加一些行路的情趣。”&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⒀爸爸想了想，笑笑说：&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;⒁“也许，你的想法更美些。”&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
　　⒂冬天快过完了，春天就要来了，太阳特别暖和，暖得让人想把棉袄脱下来。可不是吗？骆驼也脱掉它的旧驼绒袍子啦！它的毛皮一大块一大块地从身上掉下来，垂在肚皮底下。我真想拿把剪刀替它们剪一剪，因为太不整齐了。拉骆驼的人也一样，他们身上那件反穿的大羊皮，也都脱下来了，搭在骆驼背的小峰上。麻袋空了，“乌金墨玉”都卖了，铃铛在轻松的步伐里响得更清脆。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⒃夏天来了，再不见骆驼的影子，我又问妈：&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⒄“夏天它们到哪儿去？”&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⒅“谁？”&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⒆“骆驼呀！”&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　⒇妈妈回答不上来了，她说：&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　 (21)“总是问，总是问，你这孩子！”&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　
(22)夏天过去，秋天过去，冬天又来了，骆驼队又来了，但是童年却一去不还。冬阳底下学骆驼咀嚼的傻事，我也不会再做了。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　
(23)可是，我是多么想念童年住在北京城南的那些景色和人物啊！我对自己说，把它们写下来吧，让实际的童年过去，心灵的童年永存下来。就这样，我写了一本《城南旧事》。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　
(24)我默默地想，慢慢地写。看见冬阳下的骆驼队走过来，听贝缓慢悦耳的铃声，童年重临于我的心头。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
7．第⑥段画线句的作用是&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
。（2分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;8．对骆驼挂铃铛的解释，“我”的想法比爸爸的想法“更美”在哪里?（3分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
9．作者多处描述骆驼队，对此分析不恰当的两项是（&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
）（&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt; ）（6分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
A．第①段由一句话构成，简洁而有画面感，将骆驼队这一描述对象凸现出来。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
B．第②段先写骆驼群的沉默，再写拉骆驼的人头上冒的热气，有比较的意味。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
C．第③段中画线的“但是”一词有强调的作用，语意上与上文没有形成转折。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
D．第④段“屈”、“撅”、“跪”一连串动作的描写，让人们感觉到骆驼的温顺。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
E．第⑩段不用对话描写而是转述爸爸的话，改变了表达方式，行文富有变化。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
F．第⒂段描写了冬天快过完时的骆驼队，暗示“我”对骆驼的感情发生改变。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;10．有人评论林海音的文字“细致而不柔弱”，结合这一评论，赏析第⑦段画线句。（3分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
11．最后三段和前文叙述视角不同，传递的情感也有差异。请根据前后两部分内容，对此加以分析。（4分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;12．“冬阳”在行文中着墨不多，却是标题的一部分。联系全文，对此加以评析。（4分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;（三）默写。（6分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt; 【任选6空，超过6空，按前6空评分】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
13．（1）问君何能尔?&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
。&amp;nbsp;&lt;wbr /&gt; （陶渊明《饮酒》）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（2）&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
，不如须臾之所学也。&amp;nbsp;&lt;wbr /&gt; （苟子《劝学》）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（3）&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
，何似在人间!&amp;nbsp;&lt;wbr /&gt; (苏轼《水调歌头》)&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（4）不义而富且贵，&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
。 （《〈论语〉七则》）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（5）&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
，阴阳割昏晓。 （杜甫《望岳》）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（6）&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
，不能成方圆。 （《孟子·离娄上》）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（7）一夫当关，&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
&amp;nbsp;&lt;wbr /&gt;（李白《蜀道难》）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（8）月子弯弯照几州，&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
。 （杨万里《竹枝歌》）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;（四）阅读下面的作品，完成第14-16题。（8分）&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
春江晚景&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt; 张九龄&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;江林皆秀发，云日复相鲜。&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&amp;nbsp;&lt;wbr /&gt;
征路那&lt;sup&gt;①&lt;/sup&gt;逢此，春心益渺然&lt;sup&gt;②&lt;/sup&gt;。&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;兴来只自得，佳处莫能传。&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;薄暮津亭下，余花满客船。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;[注]①那：同“哪”。②渺然：广阔辽远的样子。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
14．与诗歌题目中“江”字直接照应的词语有“江林”、“&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
”和“客船”。（1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
15．对本诗分析正确的一项是（&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
）（3分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
A．本诗用典与写实相结合，含蓄而又自然。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
B．本诗以咏物为题材，脉络清晰而且顺畅。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
C．颔联、颈联对仗工整，符合律诗的要求。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
D．全诗的语言清新淡雅，又不失朴实之风。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;16．从情景关系的角度，赏析本诗前两联是如何表达作者情感的。（4分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（五）阅读下文，完成第17-21题。（17分）&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;卜式传&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
①卜式，河南人也。以田畜为事。时汉方事匈奴，式上书，愿输家财半助边。上使使问式：“欲为官乎？”式曰：“自小牧羊，不习仕宦，不愿也。”使者曰：“家岂有冤，欲言事乎？”式曰：“臣生与人无争，邑人贫者贷之，不善者教之，所居，人皆从式，何故见冤？”使者曰：“&lt;u&gt;苟，子何欲？&lt;/u&gt;”式曰：“天子诛匈奴，愚以为贤者宜死节，有财者宜输之，如此匈奴可灭也。”使者以闻。丞相弘曰：“此非&lt;u&gt;人情&lt;/u&gt;，愿陛下勿许。”于是上不报式。式归，复田牧。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
②岁余，会浑邪等降，仓府空，贫民大徙，皆仰给县官，无以尽赡。式复持钱二十万与河南太守，以给徙民。河南上富人助贫民者，上识式姓名，曰：“是固前欲输其家半财助边。”上于是以式终长者，召拜中郎。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
③初式不愿为郎，上曰：“吾有羊在上林中，欲令子牧之。”式既为郎，布衣草履而牧羊。岁余，羊肥息。上过其羊所，善之。式曰：“非独羊也，治民犹是矣。&lt;u&gt;以时起居，恶者辄去，毋令败群。&lt;/u&gt;”上奇其言，使式治民，有政声。上以式朴忠，拜为齐相。&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;（自《汉书》，有删改）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;17．写出下列加点词语在句中的意思。（4分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（1）使者以闻&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;（2）布衣草履而牧羊&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（3）岁余，羊肥息&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;（4）上过其羊所，善之&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
18．下列各组句子中加点词的用法和意义相同的一项是（&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
）。（2分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
A．臣生与人无争&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;蹇叔之子与师，哭而送之&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
B．以田畜为事&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;旦日飨士卒，为击破沛公军&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
C．布衣草履而牧羊&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;顺风而呼，声非加疾也&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
D．愚以为贤者宜死节&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;河南上富人助贫民者&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;19．把下列句子译成现代汉语。（6分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（1）苟，子何欲？&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
（2）以时起居，恶者辄去，毋令败群。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;20．第①段中，卜式的做法为什么被丞相认为是不合“人情”的？（2分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;21．依据全文，概述皇帝对卜式认识的变化过程。（3分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（六）阅读下文，完成第22-26题。（11分）&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
潭州东池戴氏堂记&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
柳宗元&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
①弘农公刺潭&lt;sup&gt;①&lt;/sup&gt;三年，因东泉为池，环之九里。其岸之突而出者，水萦之若玦焉。池之胜于是为最。公曰：“是非离世乐道者不宜有此。”卒授宾客之选者谯国戴氏曰简，为堂而居之。堂成而胜益奇，&lt;u&gt;望之若连舻縻舰，与波上下。&lt;/u&gt;就之颠倒万物，辽廓眇忽。树之松柏杉槠，被之菱芡芙蕖，郁然而阴，粲然而荣。凡观望浮游之美，专于戴氏矣。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
②戴氏尝以文行见荐，而志不愿仕。与人交，取其退让，受诸侯之宠，不以自大，其离世欤？好孔氏书，旁及《庄》、《文》，以至虚为极，得受益之道，其乐道欤？贤者之举也必以类。当弘农公之选，而专兹地之胜，岂易而得哉！地虽胜，得人焉而居之，则山若增而高，水若辟而广，&lt;u&gt;堂不待饰而已奂&lt;/u&gt;矣。戴氏以泉池为宅居，以云物为朋徒，抒幽发粹，日与之娱，则行宜益高，文宜益峻，道宜益茂，交相赞者也。既硕其内，又扬于时，吾惧其离世之志不果矣。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
③君子谓弘农公刺潭得其政，为东池得其胜，授之得其人，岂非动而时中者欤！于戴氏堂也，见公之德，不可以不记。&amp;nbsp;&lt;wbr /&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
[注]①刺潭：担任潭州刺史。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
22．第①段“水萦之若玦焉”中的“之”是指&lt;u&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/u&gt;
。（用自己的话回答）（1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;23．从修辞手法的角度，分析第①段画线句的表达效果。（2分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;24．第②段“堂不待饰而已奂”的原因是什么？ （2分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
25．下列与戴氏有关的表述不符合文意的一项是（&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
）（3分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
A．戴氏是谯国人，他是弘农公宾客中的一位佼佼者。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
B．戴氏堂是东池胜景，由弘农公建造送给戴氏居住。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
C．戴氏推崇孔子的思想，也能够博采其他人的学说。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
D．戴氏非常喜欢自然风物，常陶醉其中，抒发情怀。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;26．概括本文的主要内容。（3分）&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;二&amp;nbsp;&lt;wbr /&gt; 写作70分&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;27．根据以下材料，选取一个角度，自拟题目，写一篇不少于800字的文章（不要写成诗歌）。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
人们对自己心灵中闪过的微光，往往会将它舍弃，只因为这是自己的东西。而从天才的作品中，人们却认出了曾被自己舍弃的微光。&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;上海语文参考答案&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;一&amp;nbsp;&lt;wbr /&gt; 阅读80分&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（一）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;1．（2分）文献综述在国内学术界不太受重视，问题较多。（答对1点给1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;2．（2分）C&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
【第2段总括后三段，可以根据后三段段首中“必须”“多”“尽可能”一类词断定第1处应该填“都”，再根据第3处后的“很少”一词，断定第3处应该填“大多”】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;3．（2分）认真阅读（“认真”1分，“阅读”1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
4．（3分）第⑥段强调学术刊物对文献综述的倡导与支持的重要性；是对核心观点的补充，使论述更全面。（答对1点给2分；答对2点给3分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;5．（3分）D&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
【这个句子在文章的最后一段，是对前文的形象化总结，因此理解它的意思，需要对前文（主要是第3-5段）的相关内容作些筛选概括。】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
6．（4分）优秀的文献综述提供了该领域的学术谱系图，为该领域甚至整个学科的发展方向提出建设性意见，是提高研究水平和论文质量的保障。（答对1点给1分，答对2点给3分，答对3点给4分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（二）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
7．（2分）细致入微地写出骆驼吃草料的样子；突出“我”观察的仔细，表现了儿童的好奇和天真。（答对1点给1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
8．（3分）爸爸认为挂铃铛是骆驼安全的需要，是从实用角度讲的；“我”认为挂铃铛是人的需要，是从情感需求角度讲的；“我”的想法富有情趣，所以更美。（答对1点给1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;9．（6分）C F&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
【第3段中“拉骆驼”所说的实际上否定了“我”的猜想，前后有转折关系，因此C选项错误。第⒂段虽然写到骆驼的邋遢、难看，但从天气的交代以及“我真想”“轻松的步伐”“清脆”一类词中可以看出“我”对骆驼的感情没什么变化，因此F项也错误】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;10．（3分）评分标准：分析“细致”2分，分析“不柔弱”1分。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
答案示例：用两个“慢慢”修饰“走”和“嚼”的动作，两个“总会”修饰“走到”和“吃饱”，两两呼应，写出骆驼不着急的性子，意味深长。用词朴素，句子简短，表达恰到好处，不见柔弱。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
11．（4分）前一部分以孩子的视角，写出了“我”对世界的好奇以及童年生活的美好；后一部分（最后三段）以成年人视角，表现出作者对童年的追念和珍惜。（答对1点给1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;12．（4分）评分标准：评价1分，分析3分。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
答案示例：“冬阳”在行文中虽然着墨不多，但与全文都有内在联系。“冬阳”点出了故事发生的时间，冬阳的温暖烘托了童年生活的温馨美好，为全文奠定温暖的基调。这样写足见作者构思之巧。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（三）（6分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
13．（1）心远地自偏（2）吾尝终日而思矣（3）起舞弄清影（4）于我如浮云（5）造化钟神秀（6）不以规矩（7）万夫莫开（8）几家欢乐几家愁（答对1空给1分；超过6空，按前6空评分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（四）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;14．（1分）津亭&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;15．（3分）D&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
【A、单从试卷提供的材料看，很难断定诗歌有用典；即使对第2句作出注释，也不好说这首诗是用典和写实结合。从全诗看，应该是虚实结合或情景交融的写法。B、从题目看，这是一首写景诗，而不是咏物诗。C、两联对仗并不工整】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
16．（4分）本诗首联描绘了树木繁茂、落霞与夕阳交相辉映的春江晚景，色彩艳丽，含蓄地传达出作者喜悦的心情。颔联则直接抒发作者在征路上见到美景时喜出望外的心情。两联景中有情，情中有景，情景交融。（景色2分，情感1分，两者关系1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
【注】①秀发，枝叶繁茂，花朵盛开。语出《诗·大雅·生民》：“实发实秀。”&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
&amp;nbsp;&lt;wbr /&gt;②相鲜，景色鲜丽，相互辉映。谢灵运《登江中孤屿》诗：“云日相辉映，空水共澄鲜。”
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;③“征路”二句：行途中不意逢此佳景，更教我情兴幽远。&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
④那，怎，何。&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
⑤春心，指春景引发的意兴。春，《全唐诗》注：“一作乡。”按：作“乡”非。黄叔灿云：“作‘乡心’，与通首绝无关会。”（《唐诗笺注》卷一）&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
⑥渺，一作“眇”。渺然，幽远貌。作者《题画山水障》诗：“对玩有佳趣，使我心眇绵。”渺然，犹眇绵之意。
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;⑦“兴来”二句：言此中佳趣只可心会，却难用言语表达。宋唐庚《春日郊外》诗：“疑此江头有佳景，为君寻取却茫茫。”陈与义《春日二首》之一：“忽有好诗生眼底，安排句法已难寻。”都是写刹那间的创作感受，可以参读。&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
⑧只自．副词。犹言独自。自，词缀，无义。&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
⑨佳处，一作“佳气”。&amp;nbsp;&lt;wbr /&gt;
&amp;nbsp;&lt;wbr /&gt;⑩薄暮，黄昏时分。津亭，渡口边的驿亭。&amp;nbsp;&lt;wbr /&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;【简析】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
张九龄喜欢清澹的景色，一般是色调素洁，如月光、白云、青山、淡水，他的笔下没有浓艳的景物。而且喜欢远远地观照，在远景中体味某种超然的情怀。胡应麟说“曲江清而澹”（《诗薮》外编卷四），确实抓住了他的特点。另外张九龄在被贬所作的诗基本上不悲伤，往往充满了对美和理想的憧憬，显示出一种潇洒飘逸的情趣。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
《春江晚景》这首诗写旅途中春日的繁花佳气令人心醉。首联写景，江畔林木茂盛，花儿盛开；天上云朵落日相辉映。景象明丽。虽然化用谢灵运诗句，但是没有谢的玄气和故作高深，非常自然，仿佛信口吟来，令人感到亲切。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
三四句用虚笔。征行逢此佳景，惊喜之情顿生。自觉春思渺然，赏心自得，其中佳趣，莫可言传。此两联只写情而景在其中。落句再补写春江景色，而“眇然“意自见。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
尾联复写春江景色，日落西山，整个江面沐浴在夕阳的余晖中，水面泛着金光。飘落的花瓣伴着晚霞洒落在渡口的客船上，这样一幅绮丽迷人的景象，怎不让人赞叹。结句，以景物收束，余韵不尽，留下了美好的遐想。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
胡震亨评论说，张诗“结体简贵，选言清冷，如玉磬含风，晶盘盛露，故当于尘外置赏”（《唐音癸签》卷五）。这种看法具有相当的普遍性。张九龄确可称为盛唐神韵诗派的开山作家，一出手就区别于六朝清远诗人，为后来的盛唐山水田园派树立了标范。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（五）（17分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;17．（4分）（1）使……知道（2）穿着布衣（3）繁殖（4）认为……好&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;18．（2分）C&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
【A、介词，和、同/动词，参加、参与；B、动词，当作、作为/介词，替；C、全是连词，表修饰；D、助词，……的人/助词，定语后置的标志】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
19．（6分）（1）如果（是这样），你想要什么？（“苟”、省略句、宾语前置，各1分）（2）按一定的时间作息，不好的就去掉，不要让（它或他）损害群体。（“以时”、“辄”，句意，各1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
20．（2分）丞相认为付出后要求回报是人之常情，卜式则为国家无私付出，不求回报，所以被认为不合“人情”。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
21．（3分）皇帝开始不太了解卜式的为人，接着认识到他是忠厚的长者，最后发现他有治国才能。（答对1点给1分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;【参考译文】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
卜式，是河南人。以耕种畜牧为业。当时汉正在抵抗匈奴入侵，卜式上书，愿意捐出一半的家财资助边事。皇帝派人问卜式：“想当官吗？”卜式说：“从小牧羊，不熟悉怎样当官，不愿意做官。”使者说：“家里难道没有冤家仇人，想讲出来吗？”卜式说：“臣生来与人无争，家里贫穷的乡人，我就借钱给他；为人不善的，我就教他做好事。去到哪里，人们都顺从我，卜式有何冤事啊！”
使者说：“如果是这样，想要什麽呢？”卜式说：“皇上讨伐匈奴，我认为贤能的人应该为大节而死，有钱的人应该捐出来，这样的话匈奴就可以灭掉了。”使者报告了朝廷。丞相弘说：“这不是人之常情，希望陛下不要允许。”于是，皇上没有接受卜式的请求。卜式回家，又到田里牧羊了。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
一年多后，恰逢匈奴浑邪王等人投降，朝廷开支很大，国库空虚，贫民大迁徙，所有费用都靠朝廷补给，朝廷没法完全供给。卜式又拿出了20万给河南太守，用来发给迁徙的民众。河南上报富人救济贫民的名单，皇帝认出了卜式的名字，说：“这是以前希望捐出一半家产帮助边疆的人！”皇帝于是把卜式尊为长者，召见卜式，任命他为中郎。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
起初，卜式不愿意做官，皇帝说：“我有羊在上林苑里，想让先生去牧养它们。”卜式做了郎官后，穿著布衣草鞋去牧羊。一年多后，羊肥壮又繁殖很多。皇帝探访他牧羊的地方，对这很满意。卜式说：“
不仅仅是羊，治理人民也是这样。按时起居，凶恶的立即除去，不要让他败坏整个群体。”皇帝对他的话很惊奇，让他管理人民，有政治声誉。皇帝认为卜式朴实忠厚，任命他为相。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;（六）（11分）&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;22．（1分）东池岸边向外突出的地方&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;23．（2分）运用比喻的手法，形象地写出建在水边的戴氏堂好像相连的大船随波起伏的奇特景象。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;24．（2分）因为在这里居住着有才德的人。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;25．（3分）B&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
【原文是“堂成而胜益奇”意思是“戴氏堂建成后，景致更加奇异了”，说的并不是“戴氏堂”是东池胜景，而是“戴氏堂”使东池更胜】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
26．（3分）本文描绘了戴氏堂的美景，称赞了戴简离世乐道的情操，颂扬了弘农公治政、识人的才能和中正的美德。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;【参考译文】&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
弘农公杨凭任潭州刺史三年，以东泉为源头建造成东池，方圆有九里。池岸高突而伸进池中的地方，在水的环绕下就像是开了缺口的玉环。池中美好的景物以这个地方最为突出。杨先生说：“要不是超脱世俗而乐守圣贤之道的人，不应该享受这里的景物。”最后把它授予宾客中最优秀的人，即谯郡的戴简，为他建造了一座房子让他居住。戴氏堂建成以后，景致就更加奇异了，从远处眺望戴氏堂，好像船舰连在一起，随池中波浪的起伏而上下浮动。走进戴氏堂，俯视池面，岸上的所有景物都倒映在池中，上下映衬使人感到更加空旷迷茫而隐约不清。在东池旁种植松柏杉槠各种树木，在池水当中种上菱芡荷花，树木繁茂，林荫遍地，菱芡荷花绽开鲜艳的花朵。凡是观赏漫游的美好景致，都集中在戴氏堂了。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
戴先生曾经因为他的文章德行而多次被观察使举荐给朝廷，可是他的志向却不愿意做官。他与人交往，总是采取退让的态度，受到观察使的尊宠，也不因此而自高自大，他难道是超脱了这个世界吗？他喜欢孔子的著作，也涉猎《庄子》、《文子》。以道家所说的虚静精神状态为最高境界，得到谦虚受益的道理，他难道喜欢道家学说吗？贤能者举荐的人一定也是贤能的。被弘农公选中，而独自享受这个地方的美景，难道是容易得到的吗！地方虽然好，再得到合适的人居住在这里，那么山就好像是增加土石而加高了，水就好像是经过开辟而加宽了，堂还没来得及装饰就已经明艳照人了。戴先生的泉水池塘作为宅地居所，以美丽景物作为朋友弟子抒发幽雅的情趣，发扬精纯的品性，每天与它们相乐相娱，那么他的品性应该更加高尚，文章应该更加峻峭，学问思想应该更加盛大，这是二者之间互相促进的缘故。他既然已经美在内心，又扬名于社会，我担心他超脱世间的志向不能实现了。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
君子说弘农公做潭州刺史，把州事治理得很好，建造东池使得此处景致更加美好，又把东池授予合适的人，这难道不是举措行动都合于时宜吗！从戴氏堂这件事情上，可以看出扬先生的德行不可以不记下来。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;二&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt;
写作&amp;nbsp;&lt;wbr /&gt;&amp;nbsp;&lt;wbr /&gt; 70分&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;27&lt;/b&gt;&lt;b&gt;．（70分）评分标准&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;一类卷（63—70）基准分67分&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;能准确把握题意，立意深刻，选材恰当，中心突出，内容充实，感情真挚，结构严谨，语言流畅，有文采。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;二类卷（52—62）基准分57分&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;符合题意，立意较深刻，选材较恰当，中心明确，内容较充实，感情真实，结构完整，语言通顺。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;三类卷（39—51）基准分45分&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
基本符合题意，立意一般，选材尚恰当，中心尚明确，内容尚充实，感情尚真实，结构基本完整，语言基本通顺，偶有病句。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;四类卷（21—38）基准分29分&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;偏离题意，立意或选材不恰当，中心不明确，内容单薄，结构不够完整，语言欠通顺，语病较多。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;五类卷（20分以下）&lt;/b&gt; &lt;b&gt;符合以下一项即为五类：&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&amp;nbsp;&lt;wbr /&gt; （1）脱离题意。（2）文理不通。（3）全文不足400字。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;说明：&lt;/b&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&amp;nbsp;&lt;wbr /&gt;（1）未写题目扣2分。（2）错别字1个扣1分，至多扣3分。（3）标点错去多，酌情扣1—2分。（4）文面不整洁，酌情扣1—2分；文面整洁美观，酌情加1—2分。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;wbr /&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 01 Feb 2017 14:34:21 +0000</pubDate>
				<link>//blog.c0ldcat.ml/posts/scee-cn-2012-shanghai/</link>
				<guid isPermaLink="true">//blog.c0ldcat.ml/posts/scee-cn-2012-shanghai/</guid>
			</item>
		
			<item>
				<title>解决Content-Disposition中的中文字符乱码问题</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;大部分转载&lt;a href=&quot;https://blog.robotshell.org/2012/deal-with-http-header-encoding-for-file-download/#comments&quot;&gt;正确处理下载文件时HTTP头的编码问题(Content-Disposition)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最近写Z Uploader的时候有这样一个Case, 下载Task的打包文件, 打算用Apache的common compress折腾完后端的TarOutputStream, 加个Content-Dispositon头交给Jersey完事. 结果上线以后发现下下来的中文名乱码. 开始以为是StringBuilder惹的锅(顺带吐槽一句Openshift的openjdk 8, 至今不知道compress完中文为什么都是??????), 尝试多种修改无果, 本来想用统一的文件名output.tar完事, 想起来可能是我两天学的HTTP不认真… 翻遍Google, 尝试各种解决GBK乱码的方法后那篇参考, 感叹以后要多读读标准…&lt;/p&gt;

&lt;p&gt;总所周知, HTTP Header中的Content-Type可以指定内容(body)的编码, 可Header本身的编码又该如何制定? 甚至, Header究竟是否允许non-ASCII编码呢?&lt;/p&gt;

&lt;p&gt;RFC中对于Content-Disposition是这样定义的:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Content-Disposition: attachment;
                     filename=&quot;$encoded_fname&quot;;
                     filename*=utf-8''$encoded_fname
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;所谓&lt;code class=&quot;highlighter-rouge&quot;&gt;$encoded_fname&lt;/code&gt;就是指安装百分号编码方式讲&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;字符串进行编码.&lt;/p&gt;

&lt;p&gt;(另外, 为了兼容IE6, 请保证原始文件名必须包含英文扩展名!)&lt;/p&gt;

&lt;p&gt;知道这点, 解决方案就变得非常简单了, 在Java里只要加上&lt;code class=&quot;highlighter-rouge&quot;&gt;URLEncoder.encode(String)&lt;/code&gt;就行.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;接下来我们来看看为什么要这么做以及为什么能这么做&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;首先, 根据&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2616&lt;/code&gt;所定义的HTTP 1.1协议(&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2068&lt;/code&gt;是最早的版本; &lt;code class=&quot;highlighter-rouge&quot;&gt;2616&lt;/code&gt;替代了&lt;code class=&quot;highlighter-rouge&quot;&gt;2068&lt;/code&gt;并被最广泛使用, 而后又被其他&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC&lt;/code&gt;替代, 后文将会提及), HTTP消息格式其实是基于古老的&lt;code class=&quot;highlighter-rouge&quot;&gt;ARPA Internet Text Messages&lt;/code&gt;,而&lt;code class=&quot;highlighter-rouge&quot;&gt;ARPA&lt;/code&gt;消息只能是&lt;code class=&quot;highlighter-rouge&quot;&gt;ASCII&lt;/code&gt;编码的(&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 822 Section 3&lt;/code&gt;). &lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2616 Section 2.2&lt;/code&gt;更是再一次强调, &lt;code class=&quot;highlighter-rouge&quot;&gt;TEXT&lt;/code&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;Section 4.2:Header&lt;/code&gt;中的字段值即为&lt;code class=&quot;highlighter-rouge&quot;&gt;TEXT&lt;/code&gt;)中若要使用其他字符集, 必须使用&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2047&lt;/code&gt;的规则将字符串编码/逃逸-必须要注意的是, 这个规则原本是针对&lt;code class=&quot;highlighter-rouge&quot;&gt;MIME&lt;/code&gt;(电子邮件)的扩展, 格式与百分号编码有很大不同.&lt;/p&gt;

&lt;p&gt;在1999年&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2616&lt;/code&gt;推出之时, &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Dispostion&lt;/code&gt;这个Header尚不是正式HTTP协议的一部分, 只不过是因为被广泛使用而从&lt;code class=&quot;highlighter-rouge&quot;&gt;MIME&lt;/code&gt;标准中直接借用过来了而已(RFC 2616 Section 19.5.1). 因而几乎没有浏览器去支持&lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Disposition&lt;/code&gt;的多语言编码特性这样一个”扩展特性的扩展特性”. 事实上, &lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2616&lt;/code&gt;中建议的使用&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2047&lt;/code&gt;来进行多语言编码的特性从未被主流浏览器支持过, 所以我们也不用操心上面这个&lt;code class=&quot;highlighter-rouge&quot;&gt;MIME&lt;/code&gt;方案了…&lt;/p&gt;

&lt;p&gt;可是这个问题却的确是现实需要的, 所以浏览器就各自想出了一些办法:&lt;/p&gt;

&lt;p&gt;IE支持在&lt;code class=&quot;highlighter-rouge&quot;&gt;filename&lt;/code&gt;中直接使用百分号编码: &lt;code class=&quot;highlighter-rouge&quot;&gt;filename=&quot;$encoded_text&quot;(并非MIME编码!)&lt;/code&gt;. 本来按照&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2616&lt;/code&gt;, 引号内的部分如果不是MIME编码, 则应当直接被当作内容, 就算它”看起来像是百分号编码后的字符串”; 可是IE却会”自动”对这样的文件名进行解码-前提是该文件名必须有一个不会被编码的(即ASCII)后缀名!&lt;/p&gt;

&lt;p&gt;其他一些浏览器则支持一种更为粗暴的方式: 允许在&lt;code class=&quot;highlighter-rouge&quot;&gt;filename=&quot;TEXT&quot;&lt;/code&gt;中直接使用UTF-8编码的字符串! 这也是直接违反了&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2616&lt;/code&gt;: HTTP头必须是ASCII编码的规定.&lt;/p&gt;

&lt;p&gt;这两类浏览器的行为是彼此互不兼容的. 所以你可以判断UA然后对IE使用前一种办法, 其他浏览器使用后一种, 这样便可以达到一般情况下能够just work的效果(Discuz就是这么做的). 不过对于Opera和Safari, 这样做可能不一定有效.&lt;/p&gt;

&lt;p&gt;时代在进步, 2010年&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 5987&lt;/code&gt;发布,正式规定了HTTP Header中多语言编码的处理方式采用&lt;code class=&quot;highlighter-rouge&quot;&gt;parameter*=charset'lang'value&lt;/code&gt;的格式, 其中: &lt;code class=&quot;highlighter-rouge&quot;&gt;charset&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;lang&lt;/code&gt;不区分大小写.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lang&lt;/code&gt;是用来标注字段的语言, 以供读屏软件朗诵或根据语言特性进行特殊渲染, 可以留空.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;根据RFC 3986 Section 2.1使用百分号编码, 并且规定浏览器至少应该支持ASCII和UTF-8.&lt;/p&gt;

&lt;p&gt;当&lt;code class=&quot;highlighter-rouge&quot;&gt;parameter&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;parameter*&lt;/code&gt;同时出现在HTTP头中时, 浏览器应当使用后者.&lt;/p&gt;

&lt;p&gt;其好处是保持了向前兼容性: 一来HTTP头仍然是&lt;code class=&quot;highlighter-rouge&quot;&gt;ASCII-only&lt;/code&gt;, 二来不支持该标准的旧版浏览器会按照当年&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2616&lt;/code&gt;的规定, 把&lt;code class=&quot;highlighter-rouge&quot;&gt;parameter*&lt;/code&gt;整体当作一个&lt;code class=&quot;highlighter-rouge&quot;&gt;field name&lt;/code&gt;, 从而当作一个未知的字段来忽略. 随后, 2011年&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 6266&lt;/code&gt;发布, 正式将&lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Disposition&lt;/code&gt;纳入HTTP标准, 并再次强调了&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 5987&lt;/code&gt;中多语言编码的方法, 还给出了一个范例用于解决向后兼容的问题:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Content-Disposition: attachment;
                     filename=&quot;EURO rates&quot;;
                     filename*=utf-8''%e2%82%ac%20rates
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个例子里, &lt;code class=&quot;highlighter-rouge&quot;&gt;filename&lt;/code&gt;的值是一个同义英语词组-这样符合&lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 2616&lt;/code&gt;, 普通的字段不应当被编码; 至于使用&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;只是因为它是标准中强制要求必须支持的. 然而, 如果我们再仔细想想-目前市场上常见的旧版本浏览器多为IE. 如此一来, 我们可以适当变通一下, 将&lt;code class=&quot;highlighter-rouge&quot;&gt;filename&lt;/code&gt;字段也直接使用百分号编码后的字符串:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Content-Disposition: attachment;
                     filename=&quot;%e2%82%ac%20rates.txt&quot;;
                     filename*=utf-8''%e2%82%ac%20rates.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;对于较新的Firefox, Chrome, Opera, Safari等浏览器, 都支持并会使用新标准规定的&lt;code class=&quot;highlighter-rouge&quot;&gt;filename*&lt;/code&gt;, 即使它们不会自动解码&lt;code class=&quot;highlighter-rouge&quot;&gt;filename&lt;/code&gt;也无所谓了; 而对于旧版本的IE浏览器, 它们无法识别&lt;code class=&quot;highlighter-rouge&quot;&gt;filename*&lt;/code&gt;, 会将其自动忽略并使用旧的&lt;code class=&quot;highlighter-rouge&quot;&gt;filename&lt;/code&gt;(唯一的小瑕疵是必须要有一个英文后缀名). 这样一来就完美解决了多浏览器的多语言兼容问题, 既不需要UA判断, 也较为符合标准.&lt;/p&gt;
</description>
				<pubDate>Sat, 28 Jan 2017 06:26:46 +0000</pubDate>
				<link>//blog.c0ldcat.ml/posts/encode-chinese-character-in-content-disposition/</link>
				<guid isPermaLink="true">//blog.c0ldcat.ml/posts/encode-chinese-character-in-content-disposition/</guid>
			</item>
		
			<item>
				<title>Jackson Annotation Note</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Based on the &lt;a href=&quot;http://www.baeldung.com/jackson-annotations&quot;&gt;article: Jackson Annotation Examples&lt;/a&gt; by Eugen Paraschiv&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;最近在搞Dropwizard, 意外发现了这个&lt;a href=&quot;https://github.com/FasterXML/jackson&quot;&gt;Jackson JSON Processor&lt;/a&gt;, 支持注脚, 非常好用, 官方Wiki关于此写的并不详细, 在次转来一篇Example, 浅显易懂便不作翻译.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;In this article, we'll do a deep dive into &lt;strong&gt;Jackson Annotations&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We'll see how to use the existing annotations, how to create custom ones and finally – how to disable them.&lt;/p&gt;

&lt;h2 id=&quot;jackson-serialization-annotations&quot;&gt;Jackson Serialization Annotations&lt;/h2&gt;

&lt;p&gt;First – let's take a look at the serialization annotations.&lt;/p&gt;

&lt;h3 id=&quot;jsonanygetter&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonAnyGetter&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonAnyGetter&lt;/code&gt; annotation allows the flexibility of using a Map field as standard properties.&lt;/p&gt;

&lt;p&gt;Here's a quick example – the ExtendableBean entity has the name property and a set of extendable attributes in form of key/value pairs:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExtendableBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonAnyGetter&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When we serialize an instance of this entity, we get all the key-values in the Map as standard, plain properties:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;attr2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;attr1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here how the serialization of this entity looks like in practice:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonAnyGetter_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ExtendableBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExtendableBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;attr1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;val1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;attr2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;val2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;attr1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;val1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsongetter&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonGetter&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonGetter&lt;/code&gt; annotation is an alternative to &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonProperty&lt;/code&gt; annotation to mark the specified method as a getter method.&lt;/p&gt;

&lt;p&gt;In the following example – we specify the method getTheName() as the getter method of name property of MyBean entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonGetter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTheName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's how this works in practice:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonGetter_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonpropertyorder&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonPropertyOrder&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonPropertyOrder&lt;/code&gt; annotation is used to specify &lt;strong&gt;the order of properties on serialization&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's set a custom order for the properties of a MyBean entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonPropertyOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here is the output of serialization:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And a simple test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonPropertyOrder_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonrawvalue&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonRawValue&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonRawValue&lt;/code&gt; is used to instruct the Jackson to serialize a property exactly as is.&lt;/p&gt;

&lt;p&gt;In the following example – we use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonRawValue&lt;/code&gt; to embed some custom JSON as a value of an entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RawBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonRawValue&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output of serializing the entity is:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;attr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And a simple test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonRawValue_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;RawBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RawBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:false}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:false}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonvalue&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonValue&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonValue&lt;/code&gt; indicates a single method that should be used to serialize the entire instance.&lt;/p&gt;

&lt;p&gt;For example in an enum – we annotate the getName with &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonValue&lt;/code&gt; so that any such entity is serialized via its name:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TypeEnumWithValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TYPE1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Type A&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Type 2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonValue&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonValue_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonParseException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumAsString&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TypeEnumWithValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enumAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonrootname&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonRootName&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonRootName&lt;/code&gt; annotation is used – if wrapping is enabled – to specify the name of the root wrapper to be used.&lt;/p&gt;

&lt;p&gt;Wrapping means that instead of serializing a User to something like:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;It's going to be wrapped like this:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;User&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So, let's look at an example – we're going to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonRootName&lt;/code&gt; annotation to indicate the name of this potential wrapper entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonRootName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWithRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By default, the name of the wrapper would be the name of the class – UserWithRoot. By using the annotation, we get the cleaner-looking user:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonRootName_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;UserWithRoot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SerializationFeature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WRAP_ROOT_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here is the output of serialization:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonserialize&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonSerialize&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonSerialize&lt;/code&gt; is used to indicate a custom serializer will be used to marshall the entity.&lt;/p&gt;

&lt;p&gt;Let's look at a quick example – we're going to use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonSerialize&lt;/code&gt; to serialize the eventDate property with a CustomDateSerializer:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonSerialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustomDateSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the simple custom Jackson serializer:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CustomDateSerializer&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StdSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dd-MM-yyyy hh:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CustomDateSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CustomDateSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonGenerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SerializerProvider&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's use these in a test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonSerialize_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParseException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dd-MM-yyyy hh:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toParse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;20-12-2014 02:30:00&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toParse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;party&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toParse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jackson-deserialization-annotations&quot;&gt;Jackson Deserialization Annotations&lt;/h2&gt;

&lt;p&gt;Next – let's explore the Jackson deserialization annotations.&lt;/p&gt;

&lt;h3 id=&quot;jsoncreator&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonCreator&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonCreator&lt;/code&gt; annotation is used to tune the constructor/factory used in deserialization.&lt;/p&gt;

&lt;p&gt;It's very helpful when we need to deserialize some JSON that doesn't exactly match the target entity we need to get.&lt;/p&gt;

&lt;p&gt;Let's look at an example; say we need to deserialize the following JSON:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;theName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, there is no theName field in our target entity – there is only a name field. Now – we don't want to change the entity itself – we just need a little more control over the unmarshalling process – by annotating the constructor with &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonCreator&lt;/code&gt; and using the &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonProperty&lt;/code&gt; annotation as well:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BeanWithCreator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonCreator&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BeanWithCreator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@JsonProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@JsonProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;theName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's see this in action:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenDeserializingUsingJsonCreator_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;id\&quot;:1,\&quot;theName\&quot;:\&quot;My bean\&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;BeanWithCreator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readerFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeanWithCreator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jacksoninject&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JacksonInject&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JacksonInject&lt;/code&gt; is used to indicate a property that will get its value from the injection and not from the JSON data.&lt;/p&gt;

&lt;p&gt;In the following example – we use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JacksonInject&lt;/code&gt; to inject the property id:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BeanWithInject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JacksonInject&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's how this works:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenDeserializingUsingJsonInject_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;name\&quot;:\&quot;My bean\&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;InjectableValues&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InjectableValues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BeanWithInject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeanWithInject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonanysetter&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonAnySetter&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonAnySetter&lt;/code&gt; allows you the flexibility of using a Map as standard properties. On de-serialization, the properties from JSON will simply be added to the map.&lt;/p&gt;

&lt;p&gt;Let's see how this works – we'll use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonAnySetter&lt;/code&gt; to deserialize the entity ExtendableBean:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExtendableBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonAnySetter&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is the JSON we need to deserialize:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;attr2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;attr1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;val1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's how this all ties in together:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenDeserializingUsingJsonAnySetter_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;name\&quot;:\&quot;My bean\&quot;,\&quot;attr2\&quot;:\&quot;val2\&quot;,\&quot;attr1\&quot;:\&quot;val1\&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ExtendableBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readerFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExtendableBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;val2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;attr2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonsetter&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonSetter&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonSetter&lt;/code&gt; is an alternative to &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonProperty&lt;/code&gt; – used to mark the method as a setter method.&lt;/p&gt;

&lt;p&gt;This is super useful when we need to read some JSON data but the target entity class doesn't exactly match that data and so we need to tune the process to make it fit.&lt;/p&gt;

&lt;p&gt;In the following example, we'll specify the method setTheName() as the setter of the name property in our MyBean entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonSetter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setTheName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, when we need to unmarshall some JSON data – this works perfectly well:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenDeserializingUsingJsonSetter_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;id\&quot;:1,\&quot;name\&quot;:\&quot;My bean\&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readerFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTheName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsondeserialize&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonDeserialize&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonDeserialize&lt;/code&gt; is used to indicate &lt;strong&gt;the use of a custom deserializer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's see how that plays out – we'll use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonDeserialize&lt;/code&gt; to deserialize the eventDate property with the CustomDateDeserializer:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonDeserialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustomDateDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the custom deserializer:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CustomDateDeserializer&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StdDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dd-MM-yyyy hh:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CustomDateDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CustomDateDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deserialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;JsonParser&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonparser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DeserializationContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonparser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ParseException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's the back-to-back test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenDeserializingUsingJsonDeserialize_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;party&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eventDate&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dd-MM-yyyy hh:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readerFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&quot;20-12-2014 02:30:00&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eventDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jackson-property-inclusion-annotations&quot;&gt;Jackson Property Inclusion Annotations&lt;/h2&gt;

&lt;h3 id=&quot;jsonignoreproperties&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIgnoreProperties&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIgnoreProperties&lt;/code&gt; – one of the most common annotations in Jackson – is used to mark a property or a list of properties to be ignored at the class level.&lt;/p&gt;

&lt;p&gt;Let's go over a quick example ignoring the property id from serialization:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonIgnoreProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BeanWithIgnore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's the test making sure the ignore happens:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonIgnoreProperties_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;BeanWithIgnore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeanWithIgnore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonignore&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIgnore&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIgnore&lt;/code&gt; annotation is used to mark a property to be ignored at the field level.&lt;/p&gt;

&lt;p&gt;Let's use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIgnore&lt;/code&gt; to ignore the property id from serialization:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BeanWithIgnore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JsonIgnore&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And the test making sure that id was successfully ignored:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonIgnore_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;BeanWithIgnore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeanWithIgnore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonignoretype&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIgnoreType&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIgnoreType&lt;/code&gt; is used to mark all properties of annotated type to be ignored.&lt;/p&gt;

&lt;p&gt;Let's use the annotation to mark all properties of type Name to be ignored:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonIgnoreType&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the simple test making sure the ignore works correctly:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonIgnoreType_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParseException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Doe&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsoninclude&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonInclude&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonInclude&lt;/code&gt; is used to &lt;strong&gt;exclude properties with empty/null/default values&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's look at an example – excluding nulls from serialization:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonInclude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Include&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NON_NULL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the full test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonInclude_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonautodetect&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonAutoDetect&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonAutoDetect&lt;/code&gt; is used to override the default semantics of which properties are visible and which are not.&lt;/p&gt;

&lt;p&gt;Let's take a look at how the annotation can be very helpful with a simple example – let's enable serializing private properties:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonAutoDetect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fieldVisibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Visibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ANY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PrivateBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And the test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonAutoDetect_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;PrivateBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrivateBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jackson-polymorphic-type-handling-annotations&quot;&gt;Jackson Polymorphic Type Handling Annotations&lt;/h2&gt;

&lt;p&gt;Next – let's take a look at Jackson polymorphic type handling annotations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonTypeInfo&lt;/code&gt; is used to indicate details of what type information is included in serialization&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonSubTypes&lt;/code&gt; is used to indicate sub-types of annotated type&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonTypeName&lt;/code&gt; is used to define logical type name to use for annotated class&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's look over a more complex example and use all three – @JsonTypeInfo, &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonSubTypes&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonTypeName&lt;/code&gt; – to serialize/deserialize the entity Zoo:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Zoo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonTypeInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonTypeInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PROPERTY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JsonSubTypes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@JsonSubTypes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dog&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@JsonSubTypes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cat&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonTypeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dog&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Dog&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barkVolume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonTypeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cat&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Cat&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;likesCream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lives&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When we do serialization:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingPolymorphic_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Dog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lacy&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Zoo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zoo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dog&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's what serializing the Zoo instance with the Dog will result in:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;animal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lacy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;barkVolume&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now for de-serialization – let's start from the following JSON input:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;animal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lacy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cat&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And let's see how that gets unmarshalled to a Zoo instance:&lt;/p&gt;

&lt;p&gt;11&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenDeserializingPolymorphic_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;animal\&quot;:{\&quot;name\&quot;:\&quot;lacy\&quot;,\&quot;type\&quot;:\&quot;cat\&quot;}}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Zoo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zoo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readerFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lacy&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;animal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;animal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jackson-general-annotations&quot;&gt;Jackson General Annotations&lt;/h2&gt;

&lt;p&gt;Next – let's discuss some of Jackson more general annotations.&lt;/p&gt;

&lt;h2 id=&quot;jsonproperty&quot;&gt;@JsonProperty&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonProperty&lt;/code&gt; is used to indicate &lt;strong&gt;the property name in JSON&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's go over the annotation with a simple example – and use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonProperty&lt;/code&gt; to serialize/deserialize the property name when we're dealing with non-standard getters and setters:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setTheName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTheName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenUsingJsonProperty_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readerFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTheName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonformat&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonFormat&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonFormat&lt;/code&gt; annotation can be used to &lt;strong&gt;specify a format when serializing Date/Time values&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In the following example – we use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonFormat&lt;/code&gt; to control the format of the property eventDate:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;STRING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dd-MM-yyyy hh:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's the test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonFormat_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParseException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dd-MM-yyyy hh:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTC&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toParse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;20-12-2014 02:30:00&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toParse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;party&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toParse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonunwrapped&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonUnwrapped&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonUnwrapped&lt;/code&gt; is used to define that &lt;strong&gt;a value should be unwrapped/flattened when serialized&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's see exactly how that works; we'll use the annotation to unwrap the property name:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UnwrappedUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonUnwrapped&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's now serialize an instance of this class:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonUnwrapped_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParseException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UnwrappedUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UnwrappedUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Doe&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UnwrappedUser&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UnwrappedUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's how the output looks like – the fields of the static nested class unwrapped along with the other field:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;firstName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;lastName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Doe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonview&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonView&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonView&lt;/code&gt; is used to &lt;strong&gt;indicate the View&lt;/strong&gt; in which the property will be included for serialization/deserialization.&lt;/p&gt;

&lt;p&gt;An example will show exactly how that works – we'll use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonView&lt;/code&gt; to serialize an instance of Item entity.&lt;/p&gt;

&lt;p&gt;Let's start with the views:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Public&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Internal&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Public&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now here's the Item entity, using the views:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JsonView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Internal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ownerName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finally – the full test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonView_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;book&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writerWithView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;book&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonmanagedreference-jsonbackreference&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonManagedReference, @JsonBackReference&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonManagedReference&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonBackReference&lt;/code&gt; annotations are used to handle parent/child relationships and work around loops.&lt;/p&gt;

&lt;p&gt;In the following example – we use &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonManagedReference&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonBackReference&lt;/code&gt; to serialize our ItemWithRef entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ItemWithRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonManagedReference&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserWithRef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our UserWithRef entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWithRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@JsonBackReference&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ItemWithRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And the test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJacksonReferenceAnnotation_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UserWithRef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserWithRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ItemWithRef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ItemWithRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;book&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;book&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;userItems&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonidentityinfo&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIdentityInfo&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonIdentityInfo&lt;/code&gt; is used to indicate that Object Identity is to be used when serializing/deserializing values – for instance, to deal with infinite recursion type of problems.&lt;/p&gt;

&lt;p&gt;In the following example – we have an ItemWithIdentity entity with &lt;strong&gt;a bidirectional relationship&lt;/strong&gt; with the UserWithIdentity entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonIdentityInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectIdGenerators&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PropertyGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ItemWithIdentity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserWithIdentity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And the UserWithIdentity entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonIdentityInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectIdGenerators&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PropertyGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWithIdentity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ItemWithIdentity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, let's see how the infinite recursion problem is handled:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonIdentityInfo_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UserWithIdentity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserWithIdentity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ItemWithIdentity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ItemWithIdentity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;book&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;book&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;userItems&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the full output of the serialized item and user:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;itemName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;book&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;owner&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;userItems&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;jsonfilter&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonFilter&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;@JsonFilter&lt;/code&gt; annotation &lt;strong&gt;specifies a filter to be used during serialization&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's take a look at an example; first, we define the entity and we point to the filter:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myFilter&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BeanWithFilter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, in the full test, we define the filter – which excludes all other properties except name from serialization:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingJsonFilter_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BeanWithFilter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeanWithFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;FilterProvider&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filters&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleFilterProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;myFilter&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SimpleBeanPropertyFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filterOutAllExcept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;custom-jackson-annotation&quot;&gt;Custom Jackson Annotation&lt;/h2&gt;

&lt;p&gt;Next – let's see how to create &lt;strong&gt;a custom Jackson annotation&lt;/strong&gt;; we can make use of the &lt;code class=&quot;highlighter-rouge&quot;&gt;@JacksonAnnotationsInside&lt;/code&gt; annotation – as in the following example:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RUNTIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JacksonAnnotationsInside&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JsonInclude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Include&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NON_NULL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@JsonPropertyOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dateCreated&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;```&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustomAnnotation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, if we use the new annotation on an entity:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@CustomAnnotation&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BeanWithCustomAnnotation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateCreated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We can see how it does combine the existing annotations into a simpler, custom one that we can use as a shorthand:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingCustomAnnotation_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BeanWithCustomAnnotation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeanWithCustomAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dateCreated&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output of the serialization process:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My bean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jackson-mixin-annotations&quot;&gt;Jackson MixIn Annotations&lt;/h2&gt;

&lt;p&gt;Next – let's see how to use Jackson MixIn annotations.&lt;/p&gt;

&lt;p&gt;Let's use the MixIn annotations to – for example – ignore properties of type User:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonIgnoreType&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyMixInForIgnoreType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's see this in action:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenSerializingUsingMixInAnnotation_thenCorrect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;book&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;owner&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addMixIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyMixInForIgnoreType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;owner&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;disable-jackson-annotation&quot;&gt;Disable Jackson Annotation&lt;/h3&gt;

&lt;p&gt;Finally – let's see how we can disable all Jackson annotations.We can do this by disabling the MapperFeature.USE_ANNOTATIONS as in the following example:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JsonInclude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Include&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NON_NULL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@JsonPropertyOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, after disabling annotations, these should have no effect and the defaults of the library should apply:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whenDisablingAllAnnotations_thenAllDisabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MapperFeature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;USE_ANNOTATIONS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;containsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The result of serialization before disabling annotations:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The result of serialization after disabling annotations:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;This tutorial has been a deep-dive into Jackson annotations, just scratching the surface of the kind of flexibility you can get using them properly.&lt;/p&gt;

&lt;p&gt;The implementation of all these examples and code snippets can be found in the GitHub project – this is a Maven-based project, so it should be easy to import and run as it is.&lt;/p&gt;
</description>
				<pubDate>Sat, 21 Jan 2017 13:14:55 +0000</pubDate>
				<link>//blog.c0ldcat.ml/posts/jackson-annotation-note/</link>
				<guid isPermaLink="true">//blog.c0ldcat.ml/posts/jackson-annotation-note/</guid>
			</item>
		
			<item>
				<title>SCEE BIO:6.3基因工程</title>
        <description>&lt;h2 id=&quot;基因工程&quot;&gt;基因工程&lt;/h2&gt;

&lt;h3 id=&quot;原理&quot;&gt;原理&lt;/h3&gt;

&lt;p&gt;所有生物共用一套遗传密码子&lt;/p&gt;

&lt;h3 id=&quot;基本步骤&quot;&gt;基本步骤&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;获取目的基因
    &lt;ul&gt;
      &lt;li&gt;获取方法:
        &lt;ol&gt;
          &lt;li&gt;从细胞中分离&lt;/li&gt;
          &lt;li&gt;用化学方法人工合成&lt;/li&gt;
          &lt;li&gt;逆转录法&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;工具: 限制酶&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;目的基因与运载体重组
    &lt;ul&gt;
      &lt;li&gt;工具: DNA连接酶&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;重组DNA分子进入导入受体细胞
    &lt;ul&gt;
      &lt;li&gt;方法
        &lt;ul&gt;
          &lt;li&gt;显微注射&lt;/li&gt;
          &lt;li&gt;细菌病毒侵染受体细胞&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;筛选目的基因
    &lt;ul&gt;
      &lt;li&gt;抗性基因, 荧光蛋白基因: 便于筛选质粒上的标记基因&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-10-scee-bio-6-3-gene-project/breeding_transgenesis_cisgenesis.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;成功标志&quot;&gt;成功标志&lt;/h3&gt;

&lt;p&gt;合成相应的蛋白质, 体现相应的性状&lt;/p&gt;

&lt;h3 id=&quot;必要工具&quot;&gt;必要工具&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;切割DNA工具: 限制性核算内切酶
    &lt;ul&gt;
      &lt;li&gt;作用: 一种限制酶只能识别一种特定的脱氧核苷酸序列, 并在特定的部位上切割DNA分子&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;拼接DNA工具: DNA连接酶
    &lt;ul&gt;
      &lt;li&gt;作用: 通过磷酸二酯键, 将互补配对的两个黏性末端连接起来, 使之成为一个完整的DNA分子&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;运输工具: 运载体(常用: 质粒, 细菌, 病毒)
    &lt;ul&gt;
      &lt;li&gt;质粒: 细菌体内拟核外能够自主复制的环状DNA分子, 避免目的基因被分解&lt;/li&gt;
      &lt;li&gt;含特殊的遗传标记基因, 便于进行检测&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;应用&quot;&gt;应用&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;微生物基因工程:
    &lt;ul&gt;
      &lt;li&gt;利用微生物的优点: 繁殖迅速, 构造简单, 遗传操作比较容易&lt;/li&gt;
      &lt;li&gt;应用: 药用蛋白质的规模化生产&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;植物基因工程:
    &lt;ul&gt;
      &lt;li&gt;抗病毒烟草&lt;/li&gt;
      &lt;li&gt;疫苗基因转入植物&lt;/li&gt;
      &lt;li&gt;有利于生态保护, 不用或少用农药&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;动物基因工程:
    &lt;ul&gt;
      &lt;li&gt;获得具有优良性状的动物新品种&lt;/li&gt;
      &lt;li&gt;培育能产生人源性蛋白药物的动物&lt;/li&gt;
      &lt;li&gt;通常以动物受精卵作为受体细胞&lt;/li&gt;
      &lt;li&gt;用显微注射法将目的基因导入动物的受精卵中&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;克隆&quot;&gt;克隆&lt;/h2&gt;

&lt;h3 id=&quot;概念&quot;&gt;概念&lt;/h3&gt;

&lt;p&gt;不用生殖细胞结合, 直接由个体的部分组织或一个个体细胞分裂分化成新个体&lt;/p&gt;

&lt;h3 id=&quot;全能性更本原因&quot;&gt;全能性更本原因&lt;/h3&gt;

&lt;p&gt;细胞核种具有个体细胞发育的全部遗传基因&lt;/p&gt;

&lt;h3 id=&quot;证明动物细胞核具有全能性的实验&quot;&gt;证明动物&lt;u&gt;细胞核&lt;/u&gt;具有全能性的实验&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-10-scee-bio-6-3-gene-project/animal-test.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;证明植物细胞具有全能性&quot;&gt;证明植物&lt;u&gt;细胞&lt;/u&gt;具有全能性&lt;/h3&gt;

&lt;p&gt;植物组织培养技术&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-10-scee-bio-6-3-gene-project/plant-test.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;现代生物技术&quot;&gt;现代生物技术&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;价值
    &lt;ul&gt;
      &lt;li&gt;培育优良品种&lt;/li&gt;
      &lt;li&gt;转基因克隆动物&lt;/li&gt;
      &lt;li&gt;挽救珍惜物种&lt;/li&gt;
      &lt;li&gt;提供移植器官&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;转基因生物产品的安全性判断
    &lt;ul&gt;
      &lt;li&gt;是否对生态环境造成不利&lt;/li&gt;
      &lt;li&gt;是否对人类健康造成危害&lt;/li&gt;
      &lt;li&gt;禁止生殖性克隆人&lt;/li&gt;
      &lt;li&gt;不反对治疗性克隆&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;蛋白质工程&quot;&gt;蛋白质工程&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;从预期的蛋白质功能出发&lt;/li&gt;
  &lt;li&gt;设计预期蛋白质结构&lt;/li&gt;
  &lt;li&gt;推测应有的氨基酸序列&lt;/li&gt;
  &lt;li&gt;推测相应的脱氧核苷酸序列&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;注意事项&quot;&gt;注意事项&lt;/h2&gt;

&lt;p&gt;限制酶(没有DNA), &lt;strong&gt;DNA&lt;/strong&gt;连接酶&lt;/p&gt;

&lt;h2 id=&quot;杂项&quot;&gt;杂项&lt;/h2&gt;

&lt;h3 id=&quot;内切酶与外切酶&quot;&gt;内切酶与外切酶&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;从多核苷酸链的&lt;strong&gt;末端&lt;/strong&gt;开始水解核酸的酶称为核酸&lt;strong&gt;外&lt;/strong&gt;切酶&lt;/li&gt;
  &lt;li&gt;从多核苷酸链的&lt;strong&gt;中间&lt;/strong&gt;开始水解核酸的酶称为核酸&lt;strong&gt;内&lt;/strong&gt;切酶&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sat, 10 Dec 2016 08:04:00 +0000</pubDate>
				<link>//blog.c0ldcat.ml/posts/scee-bio-6-3-gene-project/</link>
				<guid isPermaLink="true">//blog.c0ldcat.ml/posts/scee-bio-6-3-gene-project/</guid>
			</item>
		
			<item>
				<title>SCEE BIO:6.1-2基因</title>
        <description>&lt;h2 id=&quot;噬菌体&quot;&gt;噬菌体&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-04-scee-bio-6-gene/bacteriophage.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DNA&lt;/strong&gt;病毒&lt;/p&gt;

&lt;h3 id=&quot;噬菌体侵染实验&quot;&gt;噬菌体侵染实验&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;同位素标记法 (&lt;sup&gt;35&lt;/sup&gt;S标记蛋白质, &lt;sup&gt;32&lt;/sup&gt;N标记DNA)&lt;/li&gt;
  &lt;li&gt;过程: 吸附-&amp;gt;注入-&amp;gt;复制-&amp;gt;组装-&amp;gt;释放&lt;/li&gt;
  &lt;li&gt;结论: DNA是遗传物质&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dnarna&quot;&gt;DNA/RNA&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-04-scee-bio-6-gene/dna-and-rna.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dna&quot;&gt;DNA&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;基本单位: 脱氧核糖核苷酸&lt;/li&gt;
  &lt;li&gt;分子结构: 双螺旋结构&lt;/li&gt;
  &lt;li&gt;组成: 磷酸+脱氧核糖+含氮碱基&lt;/li&gt;
  &lt;li&gt;含氮碱基: A腺嘌呤, T胸腺嘧啶, G鸟嘌呤, C胞嘧啶&lt;/li&gt;
  &lt;li&gt;配对规则: A-T C-G&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-04-scee-bio-6-gene/dna-chemical-structure.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;稳定性: 独特的双螺旋结构,碱基互补配对&lt;/li&gt;
  &lt;li&gt;多样性: 脱氧核苷酸排列顺序&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rna&quot;&gt;RNA&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;主要存在与细胞质中,通常为单链结构&lt;/li&gt;
  &lt;li&gt;主要分类
    &lt;ul&gt;
      &lt;li&gt;mRNA(信使核糖核酸 &lt;strong&gt;m&lt;/strong&gt;essenger RNA)&lt;/li&gt;
      &lt;li&gt;tRNA(转运核糖核酸 &lt;strong&gt;t&lt;/strong&gt;ransfer RNA)&lt;/li&gt;
      &lt;li&gt;RNA(核糖体核糖核酸 &lt;strong&gt;r&lt;/strong&gt;ibosomal RNA)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;基本单位: 核糖核苷酸&lt;/li&gt;
  &lt;li&gt;组成: 磷酸+核糖+含氮碱基&lt;/li&gt;
  &lt;li&gt;含氮碱基: A腺嘌呤, U尿嘧啶, G鸟嘌呤, C胞嘧啶&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;遗传物质自我复制-dna复制&quot;&gt;遗传物质自我复制 (DNA复制)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-04-scee-bio-6-gene/dna-replication.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;以亲代DNA分子为模板合成子代DNA分子的过程&lt;/li&gt;
  &lt;li&gt;复制方法: 半保留复制&lt;/li&gt;
  &lt;li&gt;时间: 有丝分裂, 减数第一次分裂间期&lt;strong&gt;S期&lt;/strong&gt;(基因突变发生在这一时期)&lt;/li&gt;
  &lt;li&gt;模板: DNA的一条脱氧核糖核苷酸链&lt;/li&gt;
  &lt;li&gt;原料: 游离的脱氧核苷酸&lt;/li&gt;
  &lt;li&gt;条件: 酶(DNA解旋酶, DNA聚合酶), 能量&lt;/li&gt;
  &lt;li&gt;特点: 边解旋边复制&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mrna交互作用&quot;&gt;mRNA交互作用&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-04-scee-bio-6-gene/mrna-interaction.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;概述&quot;&gt;概述&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;转录
    &lt;ul&gt;
      &lt;li&gt;定义: 以DNA的一条脱氧核苷酸为模板合成mRNA的过程&lt;/li&gt;
      &lt;li&gt;场所: 细胞核&lt;/li&gt;
      &lt;li&gt;原料: 核糖核苷酸&lt;/li&gt;
      &lt;li&gt;产物: mRNA&lt;/li&gt;
      &lt;li&gt;mRNA通过核孔通过细胞核&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;翻译
    &lt;ul&gt;
      &lt;li&gt;定义: 以mRNA为模板合成蛋白质的过程&lt;/li&gt;
      &lt;li&gt;场所: 核糖体&lt;/li&gt;
      &lt;li&gt;模板: mRNA&lt;/li&gt;
      &lt;li&gt;原料: 氨基酸&lt;/li&gt;
      &lt;li&gt;产物: 多肽和蛋白质&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;密码子&quot;&gt;密码子&lt;/h3&gt;

&lt;h4 id=&quot;遗传信息&quot;&gt;遗传信息&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;定义: 碱基对的排列顺序&lt;/li&gt;
  &lt;li&gt;种类: 4&lt;sup&gt;n&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;基因&quot;&gt;基因&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;概念: 基因是遗传的&lt;strong&gt;功能单位&lt;/strong&gt;及&lt;strong&gt;结构单位&lt;/strong&gt;, 是具有&lt;strong&gt;遗传效应&lt;/strong&gt;的&lt;strong&gt;DNA片段&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;功能: 控制蛋白质的合成&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;遗传密码&quot;&gt;遗传密码&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;mRNA&lt;/strong&gt;上的碱基序列&lt;/p&gt;

&lt;h4 id=&quot;密码子-1&quot;&gt;密码子&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;mRNA&lt;/strong&gt;上的3个相连的碱基序列&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;密码子有64种, 但tRNA只有4&lt;sup&gt;3&lt;/sup&gt;-3=61种(3种终止密码子UAA, UAG, UGA)&lt;/li&gt;
  &lt;li&gt;一种tRNA对应一种氨基酸, 但一种氨基酸可对应多种tRNA&lt;/li&gt;
  &lt;li&gt;注意计算&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;中心法则&quot;&gt;中心法则&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-12-04-scee-bio-6-gene/center.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;注意事项&quot;&gt;注意事项&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DNA/RNA中碱基占重比计算注意基数变化(导测88.6,89.9,89.14)&lt;/li&gt;
  &lt;li&gt;DNA复制计算注意母代DNA分两份(半保留复制)&lt;/li&gt;
  &lt;li&gt;DNA是&lt;strong&gt;主要&lt;/strong&gt;遗传物质&lt;/li&gt;
  &lt;li&gt;拆DNA/RNA时注意哪个是磷酸二酯键&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;其他杂项&quot;&gt;其他杂项&lt;/h2&gt;

&lt;h3 id=&quot;dna连接酶与dna聚合酶的区别&quot;&gt;DNA连接酶与DNA聚合酶的区别&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;DNA连接酶: 主要是连接&lt;strong&gt;DNA片段之间&lt;/strong&gt;的磷酸二酯键, 起连接作用, 在&lt;strong&gt;基因工程&lt;/strong&gt;中起作用&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DNA聚合酶: 主要是连接&lt;strong&gt;DNA片段与单个脱氧核苷酸之间&lt;/strong&gt;的磷酸二酯键, 在&lt;strong&gt;DNA复制&lt;/strong&gt;中起做用&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;发生基因突变但表达正常的三种情况&quot;&gt;发生基因突变但表达正常的三种情况&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;碱基在内含子上&lt;/li&gt;
  &lt;li&gt;所形成的RNA所决定的氨基酸不变&lt;/li&gt;
  &lt;li&gt;碱基处在连接DNA基因片段的脱氧核苷酸序列上&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;内含子&quot;&gt;内含子&lt;/h3&gt;

&lt;p&gt;内含子一个基因中非编码DNA片段，它分开相邻的外显子。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;定义: 内含子是阻断基因线性表达的序列。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DNA上的内含子会被转录到前体RNA中, 但RNA上的内含子会在RNA离开细胞核进行转译前被剪除.
在成熟mRNA被保留下来的基因部分被称为外显子. 真核生物的基因含有外显子和内含子, 是前者&lt;strong&gt;区别原核生物的特征之一&lt;/strong&gt;.&lt;/p&gt;
</description>
				<pubDate>Sun, 04 Dec 2016 13:08:50 +0000</pubDate>
				<link>//blog.c0ldcat.ml/posts/scee-bio-6-gene/</link>
				<guid isPermaLink="true">//blog.c0ldcat.ml/posts/scee-bio-6-gene/</guid>
			</item>
		
			<item>
				<title>SCEE BIO:12.6血压</title>
        <description>&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/bio-font.css&quot; /&gt;

&lt;h2 id=&quot;血液循环&quot;&gt;血液循环&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-11-29-scee-bio-12-6-blood-pressure/blood-cycle.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;血压&quot;&gt;血压&lt;/h2&gt;

&lt;h3 id=&quot;定义&quot;&gt;定义&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;时期&lt;/th&gt;
      &lt;th&gt;名称&lt;/th&gt;
      &lt;th&gt;范围&lt;/th&gt;
      &lt;th&gt;容差&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;收缩中期&lt;/td&gt;
      &lt;td&gt;收缩压&lt;/td&gt;
      &lt;td&gt;100~130mmHg&lt;/td&gt;
      &lt;td&gt;±10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;心舒末期&lt;/td&gt;
      &lt;td&gt;舒张压&lt;/td&gt;
      &lt;td&gt;60~90mmHg&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;规律&quot;&gt;规律&lt;/h3&gt;

&lt;p&gt;清晨血压较低;晚上血压较高&lt;/p&gt;

&lt;h3 id=&quot;测量&quot;&gt;测量&lt;/h3&gt;

&lt;p&gt;肘窝部肱动脉处&lt;/p&gt;

&lt;h3 id=&quot;表示方式&quot;&gt;表示方式&lt;/h3&gt;

&lt;p&gt;收缩压/舒张压&lt;/p&gt;

&lt;h2 id=&quot;影响血压的因素&quot;&gt;影响血压的因素&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-11-29-scee-bio-12-6-blood-pressure/factor.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;血压的调节--&quot;&gt;血压的调节 &lt;span class=&quot;icon-神经元&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-肾上腺&quot;&gt;&lt;/span&gt;&lt;/h2&gt;

&lt;h3 id=&quot;减压调节反射-&quot;&gt;减压调节(反射) &lt;span class=&quot;icon-神经元&quot;&gt;&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;icon-神经元&quot;&gt;&lt;/span&gt; 神经调节&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-11-29-scee-bio-12-6-blood-pressure/low.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;升压调节--&quot;&gt;升压调节 &lt;span class=&quot;icon-神经元&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-肾上腺&quot;&gt;&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;icon-神经元&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-肾上腺&quot;&gt;&lt;/span&gt; 神经体液调节&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-11-29-scee-bio-12-6-blood-pressure/high.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;注意&quot;&gt;注意&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;年龄增大血压升高的主要原因是外周阻力增大&lt;/li&gt;
  &lt;li&gt;长期过度紧张可导致大脑心血管中枢平衡失调从而导致血压升高&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 30 Nov 2016 15:38:00 +0000</pubDate>
				<link>//blog.c0ldcat.ml/posts/scee-bio-12-6-blood-pressure/</link>
				<guid isPermaLink="true">//blog.c0ldcat.ml/posts/scee-bio-12-6-blood-pressure/</guid>
			</item>
		
			<item>
				<title>百度云下载提速</title>
        <description>&lt;p&gt;只支持百度云管家&lt;strong&gt;&lt;a href=&quot;https://mega.nz/#!J8YGXJIR!pKQR7sgu7C4slhKQp3B3mK0yZuOo49KrC8XIFQNyUuY&quot;&gt;v5.3.1&lt;/a&gt;&lt;/strong&gt; //测试新版无法使用,&lt;a href=&quot;https://mega.nz/#!Vw4iQJxJ!5VtkmlKBKrlIboWg_ELKlFUv2Ioi1Uk7-9nk8CpaYUw&quot;&gt;补丁下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;什么是提速特权&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;提速特权是百度云会员的专享特权。百度云为会员用户提供了专属的下载通道支持，提升你的下载速度。试用后，速度即可提升，系统给出的最高速度为理论值，提速的实际效果依具体的网络情况而定。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/baidu-yun-logo.png&quot; alt=&quot;百度云&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;提速特权可以突破带宽上限吗&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;不能。带宽上限是指你与运营商协商的，当前线路最高能达到的带宽。当你已经达到带宽上限时，提速特权将无法为你提供额外的加速。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;这个补丁特点&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;去除文件校验;破解下载提速;加速时间越用越多;破解领取加速失败&lt;/p&gt;
&lt;/blockquote&gt;

</description>
				<pubDate>Tue, 29 Nov 2016 19:00:00 +0000</pubDate>
				<link>//blog.c0ldcat.ml/posts/baidu-cloud-crack/</link>
				<guid isPermaLink="true">//blog.c0ldcat.ml/posts/baidu-cloud-crack/</guid>
			</item>
		
			<item>
				<title>LaTeX 学习笔记</title>
        <description>&lt;!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#什么是latex&quot;&gt;什么是LaTeX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tatex的优缺点&quot;&gt;TaTeX的优缺点&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#latex学习笔记&quot;&gt;LaTeX学习笔记&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#安装for-windows&quot;&gt;安装(for Windows)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#安装for-linux&quot;&gt;安装(for Linux)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#安装vim插件vim-latex-suitefor-linux&quot;&gt;安装Vim插件:Vim Latex-Suite(for Linux)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vim-latex-suite&quot;&gt;Vim Latex-Suite&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#latex命令格式&quot;&gt;LaTeX命令格式&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#基本结构&quot;&gt;基本结构&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#文档类&quot;&gt;文档类&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#宏包&quot;&gt;宏包&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#插入文件&quot;&gt;插入文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#仅检查语法&quot;&gt;仅检查语法&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#中文化xecjkctex&quot;&gt;中文化(xeCJK&amp;amp;CTeX)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#特殊字符&quot;&gt;特殊字符&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#文本排版&quot;&gt;文本排版&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#标题章和节&quot;&gt;标题,章和节&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#章节目录&quot;&gt;章节目录&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ctex更换全文中文字体&quot;&gt;CTeX更换全文中文字体&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#参阅书籍&quot;&gt;参阅书籍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#一些问题&quot;&gt;一些问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /TOC --&gt;

&lt;p&gt;其实只是想找一款方便的笔记软件用来记录化学笔记&lt;del&gt;为什么不用notebook…&lt;/del&gt;,后来就找到了这个LaTeX.&lt;/p&gt;

&lt;p&gt;LaTeX作为一款优秀的电子排版软件,相比Office Word有更好的兼容性&lt;del&gt;甚至有Beamer做演示稿&lt;/del&gt;,也拥有Gitbook这样方便控制的一些的特性,是撰写理工科论文,笔记的优秀工具.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-07-learning-latex/latex.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;什么是latex&quot;&gt;什么是LaTeX&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;LaTEX（/ˈlɑːtɛx/，常被读作/ˈlɑːtɛk/或/ˈleɪtɛk/），文字形式写作LaTeX，是一种基于TEX的排版系统，由美国电脑学家莱斯利·兰伯特在20世纪80年代初期开发，利用这种格式，即使用户没有排版和程序设计的知识也可以充分发挥由TEX所提供的强大功能，能在几天，甚至几小时内生成很多具有书籍质量的印刷品。对于生成复杂表格和数学公式，这一点表现得尤为突出。因此它非常适用于生成高印刷质量的科技和数学类文档。这个系统同样适用于生成从简单的信件到完整书籍的所有其他种类的文档。&lt;/p&gt;
  &lt;p align=&quot;right&quot;&gt;--维基百科&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;tatex的优缺点&quot;&gt;TaTeX的优缺点&lt;/h1&gt;

&lt;p&gt;LaTeX总会拿来和一些”所见即所得”(What You See Is What You Get)的文字处理和排版工具比较优缺点.&lt;/p&gt;

&lt;p&gt;以下总结一些LaTeX的优点:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;专业的排版输出&lt;/strong&gt;,产生的文档看上去就像“印刷品”一样.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;方便而强大的数学公式排版能力&lt;/strong&gt;,无出其右.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;简单易懂的命令&lt;/strong&gt;,绝大多数时候,用户只需掌握一些简单易懂的命令来组织文档结构,无需(或很少)操心文档的版面设计.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;很容易生成复杂的专业排版元素&lt;/strong&gt;,如脚注,交叉引用,参考文献,目录等.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;强大的扩展性&lt;/strong&gt;,世界各地的人开发了数以千计的LaTeX宏包用于补充和扩展LaTeX的功能.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;促使用户写出结构良好的文档&lt;/strong&gt;而这也是LaTeX存在的初衷.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;免费&lt;/strong&gt;,LaTeX依赖的TEX排版引擎和其它软件是跨平台,免费,开源的.无论用户使用的是 Windows,OS X,GNU/Linux还是FreeBSD等系统,都能轻松获得并使用这一强大的排版工具.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LaTeX的缺点也是显而易见的:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;入门门槛高&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;排查错误困难&lt;/strong&gt;,LaTeX作为一个依靠编写代码工作的排版工具,其使用的宏语言比 C++
或 Python 等程序设计语言在错误排查方面困难得多。它虽然能够提示错误,但不提供调
试的机制,有时错误提示还很难理解..&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;样式定制困难&lt;/strong&gt;,LaTeX提供了一个基本上良好的样式,为了让用户不去关注样式而专注于
文档结构。但如果想要改进 L A TEX 生成的文档样式则是十分困难.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;相比”所见即所得”的模式有一些不便&lt;/strong&gt;,为了查看生成的文档,用户总要不停地编译.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;latex学习笔记&quot;&gt;LaTeX学习笔记&lt;/h1&gt;

&lt;h2 id=&quot;安装for-windows&quot;&gt;安装(for Windows)&lt;/h2&gt;
&lt;p&gt;CTEX.ORG为我们准备好了LaTeX及中文化的&lt;a href=&quot;http://www.ctex.org/CTeXDownload#hn_59ca4f8bbb_2&quot;&gt;套装&lt;/a&gt;,直接安装即可&lt;/p&gt;

&lt;h2 id=&quot;安装for-linux&quot;&gt;安装(for Linux)&lt;/h2&gt;
&lt;p&gt;大多数Linux发行版都在其源中加入了TeX Live,对于Arch Linux:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacman -S texlive-core &lt;span class=&quot;c&quot;&gt;#核心&lt;/span&gt;
pacman -S texlive-most &lt;span class=&quot;c&quot;&gt;#包括了一些常用宏包&lt;/span&gt;
pacman -S texlive-lang &lt;span class=&quot;c&quot;&gt;#对其他语言(如中文,韩文等)的支持&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;安装vim插件vim-latex-suitefor-linux&quot;&gt;安装Vim插件:Vim Latex-Suite(for Linux)&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacman -S vim-latexsuite
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;vim-latex-suite&quot;&gt;Vim Latex-Suite&lt;/h2&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LaTeX Suite Vim 配置&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot;LaTeX Suite Vim 配置&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;filetype&lt;/span&gt; plugin &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &quot;启动时调用插件&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;REQUIRED&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;filetype&lt;/span&gt; indent &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &quot;启动时按文件类型调用插件&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;OPTIONAL&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; shellslash &quot;Windows用户需要开启shellslash来调用latex命令&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;IMPORTANT&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; grepprg&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;grep&lt;/span&gt;\ &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;nH\ $* &quot;grep时显示文件名&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;IMPORTANT&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot;Vim7开始,空.tex默认定义为'plaintex'而不是'tex',这会导致vim-latex不被调用&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot;增加此环境变量还原这一设置(OPTIONAL)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:tex_flavor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;latex&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; this is mostly a matter of taste. but LaTeX looks good with just a bit&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; of indentation.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; type in \ref{fig: and press &amp;lt;C-n&amp;gt; you will automatically cycle through&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; all the figure labels. Very useful!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; iskeyword&lt;span class=&quot;p&quot;&gt;+=:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看帮助&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;help latex&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;suite&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;latex命令格式&quot;&gt;LaTeX命令格式&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;反斜线和后面的一串字母,以任意非字母符号(空格,数字,标点等)作为分隔符.&lt;/li&gt;
  &lt;li&gt;反斜线和后面的一个非字母符号,无需分隔符.&lt;/li&gt;
  &lt;li&gt;对大小写敏感&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;基本结构&quot;&gt;基本结构&lt;/h2&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;%导言区&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;%文档&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;文档类&quot;&gt;文档类&lt;/h2&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[⟨options⟩]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;⟨class&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;name⟩&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;宏包&quot;&gt;宏包&lt;/h2&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[⟨options⟩]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;⟨class-name⟩&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;%导言区&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;插入文件&quot;&gt;插入文件&lt;/h2&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;⟨filename⟩&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;⟨filename⟩&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;%不新建页&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;仅检查语法&quot;&gt;仅检查语法&lt;/h2&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\syntaxonly&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;%导言区&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;中文化xecjkctex&quot;&gt;中文化(xeCJK&amp;amp;CTeX)&lt;/h2&gt;

&lt;p&gt;仅使用xeCJK:&lt;/p&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;xeCJK&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\setCJKmainfont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;SimSun&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;
中文LaTeX排版。
&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;CTeX是xeCJK的进一步封装:&lt;/p&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;ctex&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;%使用ctex宏包&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;
你好
&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再进一步:&lt;/p&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;ctexart&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;\begin{document}&lt;/span&gt;
你好
&lt;span class=&quot;nt&quot;&gt;\end{document}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;特殊字符&quot;&gt;特殊字符&lt;/h2&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\$&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\_&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\^&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\textbackslash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;文本排版&quot;&gt;文本排版&lt;/h2&gt;

&lt;p&gt;对LaTeX来说多少个空格或Tab或一个换行都算一个空格.&lt;/p&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\\&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;%另起一行(本段)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;%两个换行,另起一段&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\newpage&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;%另起一页&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;标题章和节&quot;&gt;标题,章和节&lt;/h2&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\chapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;...&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;%只有report和book有&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;...&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\subsection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;...&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\subsubsection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;...&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\paragraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;...&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\subparagraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;...&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;章节目录&quot;&gt;章节目录&lt;/h2&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\tableofcontents&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在其出现的位置插入目录.为了得到正确的目录(table of contents) 内容,一个新文档必须编译两次.有时还要编译第三次.如有必要LaTeX会告诉你.&lt;/p&gt;

&lt;h2 id=&quot;ctex更换全文中文字体&quot;&gt;CTeX更换全文中文字体&lt;/h2&gt;

&lt;p&gt;以Source Han Sans CN Regular为例子&lt;br /&gt;
在工作目录下建立ctex-fontset-shpc.def&lt;/p&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\ProvidesExplFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;ctex-fontset-shpc.def&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\ExplFileDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;2.2&lt;span class=&quot;p&quot;&gt;}{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;\ExplFileDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\setCJKmainfont&lt;/span&gt;
      [
          BoldFont = Source~Han~Sans~CN~Regular ,
        ItalicFont = Source~Han~Sans~CN~Regular
      ] &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; Source~Han~Sans~CN~Regular &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\setCJKsansfont&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; Source~Han~Sans~CN~Regular &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\setCJKmonofont&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; Source~Han~Sans~CN~Regular &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\setCJKfamilyfont&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; zhsong &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; Source~Han~Sans~CN~Regular &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\setCJKfamilyfont&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; zhhei &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; Source~Han~Sans~CN~Regular &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\setCJKfamilyfont&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; zhfs &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; Source~Han~Sans~CN~Regular &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;\setCJKfamilyfont&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; zhkai &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; Source~Han~Sans~CN~Regular &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\NewDocumentCommand&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\songti&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\CJKfamily&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; zhsong &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\NewDocumentCommand&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\heiti&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\CJKfamily&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; zhhei &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\NewDocumentCommand&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\fangsong&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\CJKfamily&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; zhfs &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\NewDocumentCommand&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\kaishu&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;\CJKfamily&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; zhkai &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\setmainfont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;Source~Han~Sans~CN~Regular&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;%英文字体&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在DocumentClass option中加入fontset=shpc&lt;/p&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;\documentclass&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[fontset=shpc]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;ctexrep&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;参阅书籍&quot;&gt;参阅书籍&lt;/h1&gt;
&lt;p&gt;这里汇集了一些我在学习LaTeX中看过的一些书籍和网站,希望对您有所帮助&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/louisstuart96/lshort-new-zh-cn&quot;&gt;《lshort(一份不太简短的LaTeX2ε介绍)(未完全翻译)》&lt;/a&gt;,Tobias Oetiker,2015&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ctex.org/&quot;&gt;Chinese TeX&lt;/a&gt;,CTEX.ORG,2016&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.latexstudio.net/&quot;&gt;LaTeX开源小屋&lt;/a&gt;,LaTeX工作室,2016&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ctan.org/&quot;&gt;CTAN&lt;/a&gt;,CEST,2016&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;一些问题&quot;&gt;一些问题&lt;/h1&gt;
&lt;p&gt;Q1:Linux中TeX生成PDF在evince中乱码&lt;br /&gt;
A1:安装poppler-data&lt;/p&gt;
</description>
				<pubDate>Sun, 07 Aug 2016 08:30:00 +0000</pubDate>
				<link>//blog.c0ldcat.ml/posts/learning-latex/</link>
				<guid isPermaLink="true">//blog.c0ldcat.ml/posts/learning-latex/</guid>
			</item>
		
	</channel>
</rss>
