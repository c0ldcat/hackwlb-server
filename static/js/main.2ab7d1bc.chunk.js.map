{"version":3,"sources":["utils/usePromise.ts","utils/useTrigger.ts","utils/blogdata.ts","BlogData.tsx","pages/WIP.tsx","components/Header.tsx","components/Root.tsx","pages/Splash.tsx","pages/Home.tsx","pages/PostsList.tsx","pages/Message.tsx","App.tsx","index.tsx","PageDispatcher.tsx"],"names":["reducer","state","action","type","error","undefined","result","payload","usePromise","promise","inputs","useReducer","dispatch","useState","value","setValue","useTrigger","triggerToken","trigger","useEffect","_promise","resolvePromise","canceled","then","_result","_error","cb","useCallback","data","retry","fetchBlogData","url","a","html","document","getElementsByTagName","innerHTML","fetch","resp","text","parseBlogData","el","createElement","title","querySelector","textContent","trim","blogData","context","extractContent","nav","extractNav","pagination","extractPagination","content","element","Array","from","querySelectorAll","map","e","name","href","getAttribute","icon","split","filter","test","replace","length","pages","current","classList","contains","Boolean","className","BlogContext","React","createContext","useBlogData","useContext","LoadingStateContext","useBlogDataLoadingState","BlogDataContext","props","push","useHistory","global","router","pathname","useLocation","initPath","_blogData","useMemo","loadingState","Provider","children","registerPageType","component","oldVersionUrl","window","location","origin","PureStringCommand","PageFilterCommand","_goTo","goTo","debounce","index","page","_setCurrent","setCurrent","p","autocomplete","total","onClick","onChange","v","parseInt","target","virtualCommands","l","m","match","c","Header","res","f","convertUrlToVirtualCommand","style","margin","color","width","flexGrow","n","key","Root","dangerouslySetInnerHTML","__html","outerHTML","extractPostList","date","shortDescription","tags","abstract","extractPostInfo","posts","stopPropagation","preventDefault","t","require","App","BlogData","PageDispatcher","ReactDOM","render","StrictMode","getElementById","bd","display","pageTypes","fallbackPageType","pt"],"mappings":"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","file":"static/js/main.2ab7d1bc.chunk.js","sourcesContent":["// Author: https://github.com/bsonntag/react-use-promise\n\nimport { useEffect, useReducer, useCallback, Reducer } from 'react'\nimport { useTrigger } from './useTrigger'\n\nfunction resolvePromise<T>(promise: Promise<T> | (() => Promise<T>)): Promise<T> {\n  if (typeof promise === 'function') {\n    return promise()\n  }\n\n  return promise\n}\n\ntype State<T> = {\n    error?: undefined | any,\n    result?: undefined | T,\n    state: 'pending' | 'rejected' | 'resolved'\n}\n\ntype Action<T> = {\n    type: 'pending'\n} | {\n    type: 'rejected',\n    payload: any\n} | {\n    type: 'resolved',\n    payload: T\n}\n\nfunction reducer<T>(state: State<T> = { state: 'pending' }, action: Action<T>): State<T> {\n  switch (action.type) {\n  case 'pending':\n    return {\n      error: undefined,\n      result: state.result,\n      state: 'pending'\n    }\n  case 'resolved':\n    return {\n      error: undefined,\n      result: action.payload,\n      state: 'resolved'\n    }\n  case 'rejected':\n    return {\n      error: action.payload,\n      result: state.result,\n      state: 'rejected'\n    }\n  default:\n    return state\n  }\n}\n\nfunction usePromise<T>(promise: Promise<T> | (() => Promise<T>), inputs: any[]): {\n  data: T | undefined,\n  error: any | undefined,\n  state: 'pending' | 'rejected' | 'resolved',\n  retry: () => void\n} {\n  const [{ error, result, state }, dispatch] = useReducer<Reducer<State<T>, Action<T>>>(reducer, {\n    state: 'pending'\n  })\n  const [triggerToken, trigger] = useTrigger()\n\n  useEffect(() => {\n    const _promise = resolvePromise(promise)\n\n    if (_promise === undefined) {\n      return\n    }\n\n    let canceled = false\n\n    dispatch({ type: 'pending' })\n\n    _promise.then(\n      _result => !canceled && dispatch({\n        payload: _result,\n        type: 'resolved'\n      }),\n      _error => !canceled && dispatch({\n        payload: _error,\n        type: 'rejected'\n      })\n    )\n\n    return () => {\n      canceled = true\n    }\n  }, [...inputs, triggerToken]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const cb = useCallback(() => {\n    if (state !== 'pending') trigger()\n  }, [trigger, state])\n\n  return {\n    data: result,\n    error,\n    state,\n    retry: cb\n  }\n}\n\nexport { usePromise }","import { useState } from 'react'\n\nexport function useTrigger(): [boolean, () => void] {\n  const [value, setValue] = useState(true)\n  return [value, () => { setValue(!value) }]\n}\n","export type Nav = {\n  name: string,\n  href: string,\n  icon: string\n}\n\nexport type Page = {\n  name: string,\n  href: string,\n  current: boolean\n}\n\nexport type BlogData = {\n  title: string,\n  nav?: Nav[],\n  pagination?: Page[],\n  content?: Element,\n  type: string\n}\n\nexport async function fetchBlogData(url?: string): Promise<BlogData> {\n  let html: string\n  if (!url) {\n    html = document.getElementsByTagName('html')[0].innerHTML\n  } else {\n    const resp = await fetch(url)\n    html = await resp.text()\n  }\n\n  return await parseBlogData(html)\n}\n\nexport async function parseBlogData(html: string): Promise<BlogData> {\n  const el = document.createElement('html')\n  el.innerHTML = html\n  const title = el.querySelector('head > title')?.textContent?.trim() || ''\n  const blogData = el.querySelector('[id=blog-data]') || document.createElement('div')\n  const context = extractContent(blogData)\n\n  return {\n    title,\n    nav: extractNav(blogData),\n    pagination: extractPagination(blogData),\n    content: context?.element,\n    type: context?.type || 'empty'\n  }\n}\n\nfunction extractNav(element: Element): Nav[] | undefined {\n  const nav = Array.from(element.querySelectorAll('#blog-data-nav > ul > li > a'))\n    .map(e => ({\n      name: e.textContent,\n      href: e.getAttribute('href'),\n      icon: (\n        (e.getAttribute('class') || '')\n          .split(' ')\n          .filter((e) => /^icon-/.test(e))[0] || 'icon-default'\n      ).replace(/^icon-/, '')\n    } as Nav))\n\n  if (nav.length === 0) return\n  return nav\n}\n\nfunction extractPagination(element: Element): Page[] | undefined {\n  const pages = Array.from(element.querySelectorAll('#blog-data-page-pagination > ul > li > a'))\n    .map((e) => {\n      let current: boolean\n      if (e.classList.contains('pagination-pager-current')) {\n        current = true\n      } else if (e.classList.contains('pagination-pager')) {\n        current = false\n      } else {\n        return undefined\n      }\n\n      return {\n        name: e.textContent,\n        href: e.getAttribute('href') || '#',\n        current\n      } as Page\n    })\n    .filter(Boolean) as Page[]\n\n  if (pages.length === 0) {\n    return\n  }\n\n  return pages\n}\n\nfunction extractContent(element: Element) {\n  const e = element.querySelector('#blog-data-content > div')\n  if (!e) return\n  \n  return {\n    type: e.className,\n    element: e\n  }\n}","import React, { useState, useContext, useMemo, useEffect } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { fetchBlogData, usePromise, BlogData } from './utils'\n\nconst BlogContext = React.createContext<BlogData>({ title: 'loading', type: 'splash' })\nexport function useBlogData() { return useContext(BlogContext) }\n\nconst defaultLoadingState = {\n  state: 'resolved' as 'pending' | 'rejected' | 'resolved',\n  retry: () => {}\n}\nconst LoadingStateContext = React.createContext(defaultLoadingState)\nexport function useBlogDataLoadingState() { return useContext(LoadingStateContext) }\n\nexport default function BlogDataContext(props: { children: React.ReactNode }) {\n  const { push } = useHistory(); (global as any).router = push\n  const { pathname } = useLocation()\n  const [initPath] = useState(pathname)\n  const { data: _blogData, state, retry } = usePromise(() => fetchBlogData(pathname === initPath ? undefined : pathname), [pathname])\n  const blogData = useMemo(() => _blogData || { title: 'loading', type: 'splash' }, [_blogData])\n  const loadingState = useMemo(() => {\n    return {\n      state,\n      retry\n    }\n  }, [state, retry])\n  useEffect(() => { document.title = blogData.title }, [blogData.title])\n\n  return (\n    <BlogContext.Provider value={blogData}>\n      <LoadingStateContext.Provider value={loadingState}>\n        {props.children}\n      </LoadingStateContext.Provider>\n    </BlogContext.Provider>\n  )\n}\n","import React from 'react'\nimport { registerPageType } from '../PageDispatcher'\n\nfunction WIPPage() {\n  const oldVersionUrl = `${window.location.origin}${window.location.pathname}?archive`\n  if (oldVersionUrl !== window.location.href) {\n    window.location.href = oldVersionUrl\n  }\n  return (\n    <div>\n      {'[WIP] '}\n      <a href={oldVersionUrl}>Redirecting to old version...</a>\n    </div>\n  )\n}\n\nregisterPageType({\n  type: 'fallback',\n  component: WIPPage\n})\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useBlogData, useBlogDataLoadingState } from '../BlogData'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport debounce from 'lodash/debounce'\nimport './Header.scss'\n\nfunction PureStringCommand(props: {text: string}) {\n  return <span className=\"command\">{props.text}</span>\n}\n\nfunction PageFilterCommand(props: {page: number}) {\n  const { pagination } = useBlogData()\n\n  const { push: _goTo } = useHistory()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goTo = useCallback(debounce((index: number) => {\n    if (pagination === undefined) return\n    if (index < 1) return\n    if (index > pagination.length) return\n    _goTo(pagination[index - 1].href)\n  }, 500), [_goTo, pagination])\n\n  const [current, _setCurrent] = useState<number>(props.page)\n  const setCurrent = useCallback((p: number) => {\n    if (1 <= p && p <= (pagination || []).length)\n      _setCurrent(p)\n  }, [_setCurrent, pagination])\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => goTo(current), [current])\n\n  let autocomplete = <></>\n  if (pagination !== undefined) {\n    const total = pagination.length\n    autocomplete = <span className=\"auto-complete\">\n      &nbsp;of {total}\n      &nbsp;\n      <span className=\"page-btns\">\n        (\n        <a\n          onClick={() => setCurrent(current - 1)}\n          className={`page-btn ${current === 1 ? \"disabled\" : \"\"}`}\n        >prev</a>,&nbsp;\n        <a\n          onClick={() => setCurrent(current + 1)}\n          className={`page-btn ${current === total ? \"disabled\" : \"\"}`}\n        >next</a>\n        )\n      </span>\n    </span>\n  }\n\n  return <span className=\"pager command\">\n    page&nbsp;\n    <input\n      value={current}\n      onChange={v => setCurrent(parseInt(v.target.value))}\n      type=\"number\"\n    />\n    {autocomplete}\n  </span>\n}\n\ntype Location = {\n  pathname: string\n}\n\nconst virtualCommands = [\n  // /\n  l => {\n    if (l.pathname === '/') return <PureStringCommand text='screenfetch' />\n  },\n  // /posts /posts/:num\n  l => {\n    let m = l.pathname.match(/^\\/posts(?:|\\/(\\d*))\\/?$/)\n    if (m === null) return\n    let page = parseInt(m[1] || '1')\n    return <>\n      <PureStringCommand text='ls /posts' />\n      <PageFilterCommand page={page} />\n    </>\n  },\n  // /posts/:string\n  l => {\n    let m = l.pathname.match(/^\\/posts\\/([^/]{1,})\\/?$/)\n    if (m === null) return\n    return <PureStringCommand text={`open /posts/${m[1]}`} />\n  },\n  // /*\n  l => {\n    let c = 'cat ' + l.pathname.replace(/\\/$/, '').replace(/\\.[^./]*/, '')\n    return <PureStringCommand text={c} />\n  }\n] as ((locaction: Location) => React.ReactNode | undefined)[]\n\nfunction convertUrlToVirtualCommand(location: Location): React.ReactNode {\n  let res: React.ReactNode = undefined\n  for (let f of virtualCommands) {\n    res = f(location)\n    if (res !== undefined) return res\n  }\n}\n\nexport default function Header(props: {\n  className?: string\n}) {\n  const blogData = useBlogData()\n  const { state, retry } = useBlogDataLoadingState()\n  const { push: goTo } = useHistory()\n  const { pathname } = useLocation()\n\n  return <div className={`terminal-nav blog-header ${props.className || ''}`}>\n    <div className=\"command-line\">\n      <span className={`ps1 ${state}`} onClick={() => {\n        if (state === 'rejected') {\n          retry()\n        } else {\n          goTo('/')\n        }\n      }} />\n      <span className=\"command-pipeline\">\n        {convertUrlToVirtualCommand({pathname})}\n      </span>\n      { state === 'pending' && <span\n        style={{\n          margin: '0 0.3em',\n          color: 'var(--secondary-color)'\n        }}\n      >...</span> }\n    </div>\n    <nav className=\"terminal-menu\" style={{\n      width: 'auto',\n      flexGrow: 1\n    }}>\n      <ul>\n        {(blogData.nav ?? []).map(n => <li key={n.name}>\n          <a\n            className=\"menu-item\"\n            onClick={() => { goTo(n.href) }}\n          >{n.name}</a>\n        </li>)}\n      </ul>\n    </nav>\n  </div>\n}","import React from 'react'\nimport Header from './Header'\nimport './Root.scss'\n\ntype HeaderProps = {\n  children: React.ReactNode\n}\n\nexport default function Root(props: HeaderProps) {\n  return <div className=\"blog-root-page\">\n    <div className=\"header-box\">\n      <Header className=\"header\"/>\n    </div>\n    <div className=\"page\">\n      <div className=\"content\">\n        {props.children}\n      </div>\n    </div>\n  </div>\n}\n","import React from 'react'\nimport { registerPageType } from '../PageDispatcher'\n\nfunction EmptyPage() {\n  return <></>\n}\n\nregisterPageType({\n  type: 'splash',\n  component: EmptyPage\n})","import React, { useMemo } from 'react'\nimport { useBlogData } from '@/BlogData'\nimport { registerPageType } from '@/PageDispatcher'\n\nfunction HomePage() {\n  const data = useBlogData()\n  const content = useMemo(() => {\n    let m = data.content?.querySelector('.message')\n    return m\n  }, [data.content])\n\n  return (\n    <div dangerouslySetInnerHTML={{ __html: content?.outerHTML || '' }}>\n    </div>\n  )\n}\n\nregisterPageType({\n  type: 'home',\n  component: HomePage\n})","import React, { useMemo } from 'react'\nimport { useBlogData } from '@/BlogData'\nimport { registerPageType } from '@/PageDispatcher'\nimport { useHistory } from 'react-router-dom'\nimport './PostsList.scss'\n\ntype PostInfo = {\n  title: string,\n  href: string,\n  date: string,\n  abstract: string,\n  tags: {\n    name: string,\n    href: string\n  }[]\n}\n\nexport function extractPostInfo (e: Element): PostInfo | undefined {\n  let title = e.querySelector('a.post-title')\n  if (!title) return\n  let date = e.querySelector('.post-date')\n  if (!date) return\n  let shortDescription = e.querySelector('.post-short-description')\n  if (!shortDescription) return\n  let tags = Array.from(e.querySelectorAll('.post-tags > li > a.post-tag'))\n\n  return {\n    title: title.textContent || '',\n    href: title.getAttribute('href') || '#',\n    date: date.textContent || '',\n    abstract: shortDescription.textContent || '',\n    tags: tags.map(e => ({\n      name: e.textContent || '',\n      href: e.getAttribute('href') || '#'\n    })),\n  }\n}\n\nfunction extractPostList (e: Element): PostInfo[] {\n  let es = Array.from(e.querySelectorAll('ul.posts-list > li'))\n  return es.map(p => {\n    let res = extractPostInfo(p)\n    \n    return res || {\n      title: 'ERROR',\n      href: '#',\n      date: '',\n      abstract: '',\n      tags: []\n    }\n  })\n}\n\nfunction PostsListPage() {\n  const { content } = useBlogData()\n  const { push: goTo } = useHistory()\n  const posts = useMemo(() => {\n    if (content) return extractPostList(content)\n    else return []\n  }, [content])\n\n  return (\n    <div className=\"posts-list\">\n      {posts.map(p => (\n        <div className=\"post-item\" key={p.href}>\n          <div className=\"title-line\">\n            <span className=\"date\">\n              {p.date}\n            </span>\n            <a href={p.href} onClick={(e) => {\n              goTo(p.href)\n              e.stopPropagation()\n              e.preventDefault()\n            }} className=\"title\">{p.title.trim()}</a>\n            <div className=\"tags-group\">\n              {p.tags.map(t => (<span className=\"tag-box\" key={t.href}>\n                <a\n                  className=\"tag\"\n                  href={t.href}\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    e.preventDefault()\n                  }}\n                >{t.name}</a>\n              </span>))}\n            </div>\n          </div>\n          <div className=\"abstract\">\n            {p.abstract}\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nregisterPageType({\n  type: 'posts-list',\n  component: PostsListPage\n})\n","import React, { useMemo } from 'react'\nimport { useBlogData } from '@/BlogData'\nimport { registerPageType } from '@/PageDispatcher'\n\nfunction MessagePage() {\n  const data = useBlogData()\n  const content = useMemo(() => {\n    let m = data.content?.querySelector('.message')\n    return m\n  }, [data.content])\n\n  return (\n    <div dangerouslySetInnerHTML={{ __html: content?.outerHTML || '' }}>\n    </div>\n  )\n}\n\nregisterPageType({\n  type: 'message',\n  component: MessagePage\n})\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom'\nimport './App.scss';\n\nimport PageDispatcher from './PageDispatcher'\nimport BlogData from './BlogData'\nimport Root from './components/Root'\n\nimport './pages/Splash'\nimport './pages/Home'\nimport './pages/PostsList'\nimport './pages/Message'\n\nif (process.env.NODE_ENV === 'development') {\n  require(\"./pages/Debug\")\n} else {\n  require(\"./pages/WIP\")\n}\n\nfunction App() {\n  return (\n    <Router>\n      <BlogData>\n        <Root>\n          <PageDispatcher />\n        </Root>\n      </BlogData>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('blog')\n);\n\nlet bd = document.getElementById('blog-data')\nif (bd) {\n  bd.style.display = 'none'\n}","import React, { ComponentType, ReactNode } from 'react'\nimport { useBlogData } from './BlogData'\n\nexport { useBlogData }\n\nfunction DefaultFallbackPage () {\n  const { type } = useBlogData()\n  return <div>cannot recognize the page type: {type}</div>\n}\n\ntype PageType = {\n  type: string,\n  component: ComponentType\n}\nconst pageTypes: PageType[] = []\nconst fallbackPageType: PageType = {\n  type: 'fallback',\n  component: DefaultFallbackPage\n}\nexport function registerPageType(page: PageType) {\n  if (page.type === 'fallback') {\n    fallbackPageType.component = page.component\n  } else {\n    pageTypes.push(page)\n  }\n}\n\nexport default function PageDispatcher() {\n  const blogData = useBlogData()\n\n  let page: ReactNode \n  for (const pt of pageTypes) {\n    if (pt.type === blogData.type) {\n      page = <pt.component />\n      break\n    }\n  }\n  if (page === undefined) {\n    page = <fallbackPageType.component />\n  }\n\n  return <>{page}</>\n}\n"],"sourceRoot":""}