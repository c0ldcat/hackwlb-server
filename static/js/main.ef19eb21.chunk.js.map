{"version":3,"sources":["PageDispatcher.tsx","utils/usePromise.ts","utils/useTrigger.ts","utils/blogdata.ts","pages/Splash.tsx","App.tsx","index.tsx"],"names":["BlogContext","React","createContext","type","pageTypes","fallbackPageType","component","useContext","registerPageType","page","push","PageDispatcher","useHistory","global","router","pathname","useLocation","useState","initPath","_blogData","usePromise","fetchBlogData","undefined","data","blogData","useMemo","pt","Provider","value","reducer","state","action","error","result","payload","promise","inputs","useReducer","dispatch","setValue","useTrigger","triggerToken","trigger","useEffect","_promise","resolvePromise","canceled","then","_result","_error","cb","useCallback","retry","url","a","html","document","getElementsByTagName","innerHTML","fetch","resp","text","parseBlogData","el","createElement","querySelector","context","extractContent","nav","extractNav","pagination","extractPagination","content","element","Array","from","querySelectorAll","map","e","name","textContent","href","getAttribute","icon","split","filter","test","replace","length","pages","current","classList","contains","Boolean","className","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef19eb21.chunk.js","sourcesContent":["import React, { useState, useContext, ComponentType, ReactNode, useMemo } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { fetchBlogData, usePromise, BlogData } from './utils'\n\nconst BlogContext = React.createContext<BlogData>({ type: 'splash' })\nexport function useBlogData() { return useContext(BlogContext) }\n\nfunction DefaultFallbackPage () {\n  const { type } = useBlogData()\n  return <div>cannot recognize the page type: {type}</div>\n}\n\ntype PageType = {\n  type: string,\n  component: ComponentType\n}\nconst pageTypes: PageType[] = []\nconst fallbackPageType: PageType = {\n  type: 'fallback',\n  component: DefaultFallbackPage\n}\nexport function registerPageType(page: PageType) {\n  if (page.type === 'fallback') {\n    fallbackPageType.component = page.component\n  } else {\n    pageTypes.push(page)\n  }\n}\n\nfunction PageDispatcher() {\n  const { push } = useHistory(); (global as any).router = push\n  const { pathname } = useLocation()\n  const [initPath] = useState(pathname)\n  const { data: _blogData } = usePromise(() => fetchBlogData(pathname === initPath ? undefined : pathname), [pathname])\n  const blogData = useMemo(() => _blogData || { type: 'splash' }, [_blogData])\n\n  let page: ReactNode \n  for (const pt of pageTypes) {\n    if (pt.type === blogData.type) {\n      page = <pt.component />\n      break\n    }\n  }\n  if (page === undefined) {\n    page = <fallbackPageType.component />\n  }\n\n  return (\n    <BlogContext.Provider value={blogData}>\n      {page}\n    </BlogContext.Provider>\n  )\n}\n\nexport default PageDispatcher\n","// Author: https://github.com/bsonntag/react-use-promise\n\nimport { useEffect, useReducer, useCallback, Reducer } from 'react'\nimport { useTrigger } from './useTrigger'\n\nfunction resolvePromise<T>(promise: Promise<T> | (() => Promise<T>)): Promise<T> {\n  if (typeof promise === 'function') {\n    return promise()\n  }\n\n  return promise\n}\n\ntype State<T> = {\n    error?: undefined | any,\n    result?: undefined | T,\n    state: 'pending' | 'rejected' | 'resolved'\n}\n\ntype Action<T> = {\n    type: 'pending'\n} | {\n    type: 'rejected',\n    payload: any\n} | {\n    type: 'resolved',\n    payload: T\n}\n\nfunction reducer<T>(state: State<T> = { state: 'pending' }, action: Action<T>): State<T> {\n  switch (action.type) {\n  case 'pending':\n    return {\n      error: undefined,\n      result: state.result,\n      state: 'pending'\n    }\n  case 'resolved':\n    return {\n      error: undefined,\n      result: action.payload,\n      state: 'resolved'\n    }\n  case 'rejected':\n    return {\n      error: action.payload,\n      result: undefined,\n      state: 'rejected'\n    }\n  default:\n    return state\n  }\n}\n\nfunction usePromise<T>(promise: Promise<T> | (() => Promise<T>), inputs: any[]): {\n  data: T | undefined,\n  error: any | undefined,\n  state: 'pending' | 'rejected' | 'resolved',\n  retry: () => void\n} {\n  const [{ error, result, state }, dispatch] = useReducer<Reducer<State<T>, Action<T>>>(reducer, {\n    state: 'pending'\n  })\n  const [triggerToken, trigger] = useTrigger()\n\n  useEffect(() => {\n    const _promise = resolvePromise(promise)\n\n    if (_promise === undefined) {\n      return\n    }\n\n    let canceled = false\n\n    dispatch({ type: 'pending' })\n\n    _promise.then(\n      _result => !canceled && dispatch({\n        payload: _result,\n        type: 'resolved'\n      }),\n      _error => !canceled && dispatch({\n        payload: _error,\n        type: 'rejected'\n      })\n    )\n\n    return () => {\n      canceled = true\n    }\n  }, [...inputs, triggerToken]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const cb = useCallback(() => {\n    if (state !== 'pending') trigger()\n  }, [trigger, state])\n\n  return {\n    data: result,\n    error,\n    state,\n    retry: cb\n  }\n}\n\nexport { usePromise }","import { useState } from 'react'\n\nexport function useTrigger(): [boolean, () => void] {\n  const [value, setValue] = useState(true)\n  return [value, () => { setValue(!value) }]\n}\n","export type Nav = {\n  name: string,\n  href: string,\n  icon: string\n}\n\nexport type Page = {\n  name: string,\n  href: string,\n  current: boolean\n}\n\nexport type BlogData = {\n  nav?: Nav[],\n  pagination?: Page[],\n  content?: Element,\n  type: string\n}\n\nexport async function fetchBlogData(url?: string): Promise<BlogData> {\n  let html: string\n  if (!url) {\n    html = document.getElementsByTagName('html')[0].innerHTML\n  } else {\n    const resp = await fetch(url)\n    html = await resp.text()\n  }\n\n  return await parseBlogData(html)\n}\n\nexport async function parseBlogData(html: string): Promise<BlogData> {\n  const el = document.createElement('html')\n  el.innerHTML = html\n  const blogData = el.querySelector('[id=blog-data]') || document.createElement('div')\n  const context = extractContent(blogData)\n\n  return {\n    nav: extractNav(blogData),\n    pagination: extractPagination(blogData),\n    content: context?.element,\n    type: context?.type || 'empty'\n  }\n}\n\nfunction extractNav(element: Element): Nav[] | undefined {\n  const nav = Array.from(element.querySelectorAll('#blog-data-nav > ul > li > a'))\n    .map(e => ({\n      name: e.textContent,\n      href: e.getAttribute('href'),\n      icon: (\n        (e.getAttribute('class') || '')\n          .split(' ')\n          .filter((e) => /^icon-/.test(e))[0] || 'icon-default'\n      ).replace(/^icon-/, '')\n    } as Nav))\n\n  if (nav.length === 0) return\n  return nav\n}\n\nfunction extractPagination(element: Element): Page[] | undefined {\n  const pages = Array.from(element.querySelectorAll('#blog-data-page-pagination > ul > li > a'))\n    .map((e) => {\n      let current: boolean\n      if (e.classList.contains('pagination-pager-current')) {\n        current = true\n      } else if (e.classList.contains('pagination-pager')) {\n        current = false\n      } else {\n        return undefined\n      }\n\n      return {\n        name: e.textContent,\n        href: e.getAttribute('href') || '#',\n        current\n      } as Page\n    })\n    .filter(Boolean) as Page[]\n\n  if (pages.length === 0) {\n    return\n  }\n\n  return pages\n}\n\nfunction extractContent(element: Element) {\n  const e = element.querySelector('#blog-data-content > div')\n  if (!e) return\n  \n  return {\n    type: e.className,\n    element: e\n  }\n}","import React from 'react'\nimport { registerPageType } from '../PageDispatcher'\n\nfunction EmptyPage() {\n  return <></>\n}\n\nregisterPageType({\n  type: 'splash',\n  component: EmptyPage\n})","import React from 'react'\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\"\nimport PageDispatcher from './PageDispatcher'\nimport \"./pages/Splash\"\n\nif (process.env.NODE_ENV === 'development') {\n  require(\"./pages/Debug\")\n}\n\nfunction App() {\n  return (\n    <Router>\n      <PageDispatcher />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('blog')\n);"],"sourceRoot":""}